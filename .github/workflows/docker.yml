name: Build and Push Docker Images

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: cloudshipai/station

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Set up Node.js
      uses: actions/setup-node@v6
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: ui/package-lock.json

    - name: Install UI dependencies
      run: |
        cd ui
        npm install

    - name: Build UI
      run: |
        cd ui
        npm run build

    - name: Prepare UI assets for embedding
      run: |
        mkdir -p internal/ui/static
        cp -r ui/dist/* internal/ui/static/

    - name: Build Station binary with embedded UI
      run: |
        # Build for both platforms with UI embedded
        VERSION="${GITHUB_REF_NAME#v}"
        BUILD_TIME="$(date -u +'%Y-%m-%d %H:%M:%S UTC')"
        LDFLAGS="-X 'station/internal/version.Version=${VERSION}' -X 'station/internal/version.BuildTime=${BUILD_TIME}'"

        GOOS=linux GOARCH=amd64 go build -ldflags "${LDFLAGS}" -tags ui -o dist/station_linux_amd64_v1/stn ./cmd/main
        GOOS=linux GOARCH=arm64 go build -ldflags "${LDFLAGS}" -tags ui -o dist/station_linux_arm64/stn ./cmd/main

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Build and push Production Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./docker/Dockerfile.production
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:production
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:production-latest
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max