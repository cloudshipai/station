// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.12.4
// source: internal/lighthouse/proto/lighthouse.proto

package proto

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Deployment mode enumeration
type DeploymentMode int32

const (
	DeploymentMode_DEPLOYMENT_MODE_UNSPECIFIED DeploymentMode = 0
	DeploymentMode_DEPLOYMENT_MODE_STDIO       DeploymentMode = 1 // Local development, MCP client usage
	DeploymentMode_DEPLOYMENT_MODE_SERVE       DeploymentMode = 2 // Team/production server
	DeploymentMode_DEPLOYMENT_MODE_CLI         DeploymentMode = 3 // CI/CD & ephemeral executions
)

// Enum value maps for DeploymentMode.
var (
	DeploymentMode_name = map[int32]string{
		0: "DEPLOYMENT_MODE_UNSPECIFIED",
		1: "DEPLOYMENT_MODE_STDIO",
		2: "DEPLOYMENT_MODE_SERVE",
		3: "DEPLOYMENT_MODE_CLI",
	}
	DeploymentMode_value = map[string]int32{
		"DEPLOYMENT_MODE_UNSPECIFIED": 0,
		"DEPLOYMENT_MODE_STDIO":       1,
		"DEPLOYMENT_MODE_SERVE":       2,
		"DEPLOYMENT_MODE_CLI":         3,
	}
)

func (x DeploymentMode) Enum() *DeploymentMode {
	p := new(DeploymentMode)
	*p = x
	return p
}

func (x DeploymentMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeploymentMode) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_lighthouse_proto_lighthouse_proto_enumTypes[0].Descriptor()
}

func (DeploymentMode) Type() protoreflect.EnumType {
	return &file_internal_lighthouse_proto_lighthouse_proto_enumTypes[0]
}

func (x DeploymentMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeploymentMode.Descriptor instead.
func (DeploymentMode) EnumDescriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{0}
}

// Run status enumeration
type RunStatus int32

const (
	RunStatus_RUN_STATUS_UNSPECIFIED RunStatus = 0
	RunStatus_RUN_STATUS_QUEUED      RunStatus = 1 // CloudShip UI initiated
	RunStatus_RUN_STATUS_DISPATCHED  RunStatus = 2 // Sent to station
	RunStatus_RUN_STATUS_RUNNING     RunStatus = 3 // Active execution
	RunStatus_RUN_STATUS_COMPLETED   RunStatus = 4 // Finished successfully
	RunStatus_RUN_STATUS_FAILED      RunStatus = 5 // Error occurred
	RunStatus_RUN_STATUS_TIMEOUT     RunStatus = 6 // Execution timeout
	RunStatus_RUN_STATUS_CANCELLED   RunStatus = 7 // User cancelled
)

// Enum value maps for RunStatus.
var (
	RunStatus_name = map[int32]string{
		0: "RUN_STATUS_UNSPECIFIED",
		1: "RUN_STATUS_QUEUED",
		2: "RUN_STATUS_DISPATCHED",
		3: "RUN_STATUS_RUNNING",
		4: "RUN_STATUS_COMPLETED",
		5: "RUN_STATUS_FAILED",
		6: "RUN_STATUS_TIMEOUT",
		7: "RUN_STATUS_CANCELLED",
	}
	RunStatus_value = map[string]int32{
		"RUN_STATUS_UNSPECIFIED": 0,
		"RUN_STATUS_QUEUED":      1,
		"RUN_STATUS_DISPATCHED":  2,
		"RUN_STATUS_RUNNING":     3,
		"RUN_STATUS_COMPLETED":   4,
		"RUN_STATUS_FAILED":      5,
		"RUN_STATUS_TIMEOUT":     6,
		"RUN_STATUS_CANCELLED":   7,
	}
)

func (x RunStatus) Enum() *RunStatus {
	p := new(RunStatus)
	*p = x
	return p
}

func (x RunStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RunStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_lighthouse_proto_lighthouse_proto_enumTypes[1].Descriptor()
}

func (RunStatus) Type() protoreflect.EnumType {
	return &file_internal_lighthouse_proto_lighthouse_proto_enumTypes[1]
}

func (x RunStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RunStatus.Descriptor instead.
func (RunStatus) EnumDescriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{1}
}

// Run source enumeration
type RunSource int32

const (
	RunSource_RUN_SOURCE_UNSPECIFIED  RunSource = 0
	RunSource_RUN_SOURCE_ANALYTICS    RunSource = 1 // Station completed run data
	RunSource_RUN_SOURCE_UI_TRIGGERED RunSource = 2 // CloudShip UI initiated
	RunSource_RUN_SOURCE_CLI_SNAPSHOT RunSource = 3 // Ephemeral execution context
)

// Enum value maps for RunSource.
var (
	RunSource_name = map[int32]string{
		0: "RUN_SOURCE_UNSPECIFIED",
		1: "RUN_SOURCE_ANALYTICS",
		2: "RUN_SOURCE_UI_TRIGGERED",
		3: "RUN_SOURCE_CLI_SNAPSHOT",
	}
	RunSource_value = map[string]int32{
		"RUN_SOURCE_UNSPECIFIED":  0,
		"RUN_SOURCE_ANALYTICS":    1,
		"RUN_SOURCE_UI_TRIGGERED": 2,
		"RUN_SOURCE_CLI_SNAPSHOT": 3,
	}
)

func (x RunSource) Enum() *RunSource {
	p := new(RunSource)
	*p = x
	return p
}

func (x RunSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RunSource) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_lighthouse_proto_lighthouse_proto_enumTypes[2].Descriptor()
}

func (RunSource) Type() protoreflect.EnumType {
	return &file_internal_lighthouse_proto_lighthouse_proto_enumTypes[2]
}

func (x RunSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RunSource.Descriptor instead.
func (RunSource) EnumDescriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{2}
}

// Step type enumeration
type StepType int32

const (
	StepType_STEP_TYPE_UNSPECIFIED StepType = 0
	StepType_STEP_TYPE_TOOL_CALL   StepType = 1
	StepType_STEP_TYPE_LLM_CALL    StepType = 2
	StepType_STEP_TYPE_PROCESSING  StepType = 3
)

// Enum value maps for StepType.
var (
	StepType_name = map[int32]string{
		0: "STEP_TYPE_UNSPECIFIED",
		1: "STEP_TYPE_TOOL_CALL",
		2: "STEP_TYPE_LLM_CALL",
		3: "STEP_TYPE_PROCESSING",
	}
	StepType_value = map[string]int32{
		"STEP_TYPE_UNSPECIFIED": 0,
		"STEP_TYPE_TOOL_CALL":   1,
		"STEP_TYPE_LLM_CALL":    2,
		"STEP_TYPE_PROCESSING":  3,
	}
)

func (x StepType) Enum() *StepType {
	p := new(StepType)
	*p = x
	return p
}

func (x StepType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StepType) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_lighthouse_proto_lighthouse_proto_enumTypes[3].Descriptor()
}

func (StepType) Type() protoreflect.EnumType {
	return &file_internal_lighthouse_proto_lighthouse_proto_enumTypes[3]
}

func (x StepType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StepType.Descriptor instead.
func (StepType) EnumDescriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{3}
}

// System status enumeration
type SystemStatus int32

const (
	SystemStatus_SYSTEM_STATUS_UNSPECIFIED SystemStatus = 0
	SystemStatus_SYSTEM_STATUS_HEALTHY     SystemStatus = 1
	SystemStatus_SYSTEM_STATUS_WARNING     SystemStatus = 2
	SystemStatus_SYSTEM_STATUS_CRITICAL    SystemStatus = 3
	SystemStatus_SYSTEM_STATUS_OFFLINE     SystemStatus = 4
)

// Enum value maps for SystemStatus.
var (
	SystemStatus_name = map[int32]string{
		0: "SYSTEM_STATUS_UNSPECIFIED",
		1: "SYSTEM_STATUS_HEALTHY",
		2: "SYSTEM_STATUS_WARNING",
		3: "SYSTEM_STATUS_CRITICAL",
		4: "SYSTEM_STATUS_OFFLINE",
	}
	SystemStatus_value = map[string]int32{
		"SYSTEM_STATUS_UNSPECIFIED": 0,
		"SYSTEM_STATUS_HEALTHY":     1,
		"SYSTEM_STATUS_WARNING":     2,
		"SYSTEM_STATUS_CRITICAL":    3,
		"SYSTEM_STATUS_OFFLINE":     4,
	}
)

func (x SystemStatus) Enum() *SystemStatus {
	p := new(SystemStatus)
	*p = x
	return p
}

func (x SystemStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SystemStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_lighthouse_proto_lighthouse_proto_enumTypes[4].Descriptor()
}

func (SystemStatus) Type() protoreflect.EnumType {
	return &file_internal_lighthouse_proto_lighthouse_proto_enumTypes[4]
}

func (x SystemStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SystemStatus.Descriptor instead.
func (SystemStatus) EnumDescriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{4}
}

// Registration status enumeration
type RegistrationStatus int32

const (
	RegistrationStatus_REGISTRATION_STATUS_UNSPECIFIED  RegistrationStatus = 0
	RegistrationStatus_REGISTRATION_STATUS_UNREGISTERED RegistrationStatus = 1 // No registration key provided
	RegistrationStatus_REGISTRATION_STATUS_REGISTERED   RegistrationStatus = 2 // Successfully registered with CloudShip
	RegistrationStatus_REGISTRATION_STATUS_INVALID_KEY  RegistrationStatus = 3 // Invalid registration key
	RegistrationStatus_REGISTRATION_STATUS_RATE_LIMITED RegistrationStatus = 4 // Too many attempts
)

// Enum value maps for RegistrationStatus.
var (
	RegistrationStatus_name = map[int32]string{
		0: "REGISTRATION_STATUS_UNSPECIFIED",
		1: "REGISTRATION_STATUS_UNREGISTERED",
		2: "REGISTRATION_STATUS_REGISTERED",
		3: "REGISTRATION_STATUS_INVALID_KEY",
		4: "REGISTRATION_STATUS_RATE_LIMITED",
	}
	RegistrationStatus_value = map[string]int32{
		"REGISTRATION_STATUS_UNSPECIFIED":  0,
		"REGISTRATION_STATUS_UNREGISTERED": 1,
		"REGISTRATION_STATUS_REGISTERED":   2,
		"REGISTRATION_STATUS_INVALID_KEY":  3,
		"REGISTRATION_STATUS_RATE_LIMITED": 4,
	}
)

func (x RegistrationStatus) Enum() *RegistrationStatus {
	p := new(RegistrationStatus)
	*p = x
	return p
}

func (x RegistrationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegistrationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_lighthouse_proto_lighthouse_proto_enumTypes[5].Descriptor()
}

func (RegistrationStatus) Type() protoreflect.EnumType {
	return &file_internal_lighthouse_proto_lighthouse_proto_enumTypes[5]
}

func (x RegistrationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegistrationStatus.Descriptor instead.
func (RegistrationStatus) EnumDescriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{5}
}

type RegisterStationRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	StationId       string                 `protobuf:"bytes,1,opt,name=station_id,json=stationId,proto3" json:"station_id,omitempty"`                   // Generated UUID or provided
	RegistrationKey string                 `protobuf:"bytes,2,opt,name=registration_key,json=registrationKey,proto3" json:"registration_key,omitempty"` // CloudShip registration key (optional)
	UserId          string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                            // From registration key
	EnvironmentName string                 `protobuf:"bytes,4,opt,name=environment_name,json=environmentName,proto3" json:"environment_name,omitempty"` // e.g., "production", "dev"
	Mode            DeploymentMode         `protobuf:"varint,5,opt,name=mode,proto3,enum=lighthouse.v1.DeploymentMode" json:"mode,omitempty"`           // server, local, cicd
	Capabilities    *StationCapabilities   `protobuf:"bytes,6,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
	Metadata        map[string]string      `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Version, OS, etc.
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RegisterStationRequest) Reset() {
	*x = RegisterStationRequest{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterStationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterStationRequest) ProtoMessage() {}

func (x *RegisterStationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterStationRequest.ProtoReflect.Descriptor instead.
func (*RegisterStationRequest) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterStationRequest) GetStationId() string {
	if x != nil {
		return x.StationId
	}
	return ""
}

func (x *RegisterStationRequest) GetRegistrationKey() string {
	if x != nil {
		return x.RegistrationKey
	}
	return ""
}

func (x *RegisterStationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RegisterStationRequest) GetEnvironmentName() string {
	if x != nil {
		return x.EnvironmentName
	}
	return ""
}

func (x *RegisterStationRequest) GetMode() DeploymentMode {
	if x != nil {
		return x.Mode
	}
	return DeploymentMode_DEPLOYMENT_MODE_UNSPECIFIED
}

func (x *RegisterStationRequest) GetCapabilities() *StationCapabilities {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *RegisterStationRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type RegisterStationResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Success         bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	StationId       string                 `protobuf:"bytes,2,opt,name=station_id,json=stationId,proto3" json:"station_id,omitempty"` // Confirmed station ID
	ErrorMessage    string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Status          RegistrationStatus     `protobuf:"varint,4,opt,name=status,proto3,enum=lighthouse.v1.RegistrationStatus" json:"status,omitempty"`
	CloudshipConfig *CloudShipConfig       `protobuf:"bytes,5,opt,name=cloudship_config,json=cloudshipConfig,proto3" json:"cloudship_config,omitempty"` // Only if registered
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RegisterStationResponse) Reset() {
	*x = RegisterStationResponse{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterStationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterStationResponse) ProtoMessage() {}

func (x *RegisterStationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterStationResponse.ProtoReflect.Descriptor instead.
func (*RegisterStationResponse) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterStationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterStationResponse) GetStationId() string {
	if x != nil {
		return x.StationId
	}
	return ""
}

func (x *RegisterStationResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *RegisterStationResponse) GetStatus() RegistrationStatus {
	if x != nil {
		return x.Status
	}
	return RegistrationStatus_REGISTRATION_STATUS_UNSPECIFIED
}

func (x *RegisterStationResponse) GetCloudshipConfig() *CloudShipConfig {
	if x != nil {
		return x.CloudshipConfig
	}
	return nil
}

type StationCapabilities struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	CanExecuteAgents      bool                   `protobuf:"varint,1,opt,name=can_execute_agents,json=canExecuteAgents,proto3" json:"can_execute_agents,omitempty"`
	HasMcpServers         bool                   `protobuf:"varint,2,opt,name=has_mcp_servers,json=hasMcpServers,proto3" json:"has_mcp_servers,omitempty"`
	SupportsBidirectional bool                   `protobuf:"varint,3,opt,name=supports_bidirectional,json=supportsBidirectional,proto3" json:"supports_bidirectional,omitempty"`
	Environments          []string               `protobuf:"bytes,4,rep,name=environments,proto3" json:"environments,omitempty"`
	AgentCount            int32                  `protobuf:"varint,5,opt,name=agent_count,json=agentCount,proto3" json:"agent_count,omitempty"`
	ToolCount             int32                  `protobuf:"varint,6,opt,name=tool_count,json=toolCount,proto3" json:"tool_count,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *StationCapabilities) Reset() {
	*x = StationCapabilities{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StationCapabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationCapabilities) ProtoMessage() {}

func (x *StationCapabilities) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationCapabilities.ProtoReflect.Descriptor instead.
func (*StationCapabilities) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{2}
}

func (x *StationCapabilities) GetCanExecuteAgents() bool {
	if x != nil {
		return x.CanExecuteAgents
	}
	return false
}

func (x *StationCapabilities) GetHasMcpServers() bool {
	if x != nil {
		return x.HasMcpServers
	}
	return false
}

func (x *StationCapabilities) GetSupportsBidirectional() bool {
	if x != nil {
		return x.SupportsBidirectional
	}
	return false
}

func (x *StationCapabilities) GetEnvironments() []string {
	if x != nil {
		return x.Environments
	}
	return nil
}

func (x *StationCapabilities) GetAgentCount() int32 {
	if x != nil {
		return x.AgentCount
	}
	return 0
}

func (x *StationCapabilities) GetToolCount() int32 {
	if x != nil {
		return x.ToolCount
	}
	return 0
}

type CloudShipConfig struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Endpoint          string                 `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	HeartbeatInterval int32                  `protobuf:"varint,2,opt,name=heartbeat_interval,json=heartbeatInterval,proto3" json:"heartbeat_interval,omitempty"`
	AutoSyncConfig    bool                   `protobuf:"varint,3,opt,name=auto_sync_config,json=autoSyncConfig,proto3" json:"auto_sync_config,omitempty"`
	Settings          map[string]string      `protobuf:"bytes,4,rep,name=settings,proto3" json:"settings,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CloudShipConfig) Reset() {
	*x = CloudShipConfig{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloudShipConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudShipConfig) ProtoMessage() {}

func (x *CloudShipConfig) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudShipConfig.ProtoReflect.Descriptor instead.
func (*CloudShipConfig) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{3}
}

func (x *CloudShipConfig) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *CloudShipConfig) GetHeartbeatInterval() int32 {
	if x != nil {
		return x.HeartbeatInterval
	}
	return 0
}

func (x *CloudShipConfig) GetAutoSyncConfig() bool {
	if x != nil {
		return x.AutoSyncConfig
	}
	return false
}

func (x *CloudShipConfig) GetSettings() map[string]string {
	if x != nil {
		return x.Settings
	}
	return nil
}

type SendRunRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RegistrationKey string                 `protobuf:"bytes,1,opt,name=registration_key,json=registrationKey,proto3" json:"registration_key,omitempty"`                                  // Registration key as station identifier
	Environment     string                 `protobuf:"bytes,2,opt,name=environment,proto3" json:"environment,omitempty"`                                                                 // Environment name
	Mode            DeploymentMode         `protobuf:"varint,3,opt,name=mode,proto3,enum=lighthouse.v1.DeploymentMode" json:"mode,omitempty"`                                            // Deployment mode (stdio, serve, cli)
	Source          RunSource              `protobuf:"varint,4,opt,name=source,proto3,enum=lighthouse.v1.RunSource" json:"source,omitempty"`                                             // Run source (analytics, ui_triggered, cli_snapshot)
	RunData         *AgentRunData          `protobuf:"bytes,5,opt,name=run_data,json=runData,proto3" json:"run_data,omitempty"`                                                          // Complete run information
	Labels          map[string]string      `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional labels
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SendRunRequest) Reset() {
	*x = SendRunRequest{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRunRequest) ProtoMessage() {}

func (x *SendRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRunRequest.ProtoReflect.Descriptor instead.
func (*SendRunRequest) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{4}
}

func (x *SendRunRequest) GetRegistrationKey() string {
	if x != nil {
		return x.RegistrationKey
	}
	return ""
}

func (x *SendRunRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *SendRunRequest) GetMode() DeploymentMode {
	if x != nil {
		return x.Mode
	}
	return DeploymentMode_DEPLOYMENT_MODE_UNSPECIFIED
}

func (x *SendRunRequest) GetSource() RunSource {
	if x != nil {
		return x.Source
	}
	return RunSource_RUN_SOURCE_UNSPECIFIED
}

func (x *SendRunRequest) GetRunData() *AgentRunData {
	if x != nil {
		return x.RunData
	}
	return nil
}

func (x *SendRunRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type SendRunResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RunId         string                 `protobuf:"bytes,3,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"` // Confirmed run ID in CloudShip
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendRunResponse) Reset() {
	*x = SendRunResponse{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRunResponse) ProtoMessage() {}

func (x *SendRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRunResponse.ProtoReflect.Descriptor instead.
func (*SendRunResponse) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{5}
}

func (x *SendRunResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SendRunResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SendRunResponse) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

type AgentRunData struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RunId          string                 `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`             // Unique run ID from Station
	AgentId        string                 `protobuf:"bytes,2,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`       // Agent identifier
	AgentName      string                 `protobuf:"bytes,3,opt,name=agent_name,json=agentName,proto3" json:"agent_name,omitempty"` // Agent display name
	Task           string                 `protobuf:"bytes,4,opt,name=task,proto3" json:"task,omitempty"`                            // User input/task
	Response       string                 `protobuf:"bytes,5,opt,name=response,proto3" json:"response,omitempty"`                    // Agent output
	ToolCalls      []*ToolCall            `protobuf:"bytes,6,rep,name=tool_calls,json=toolCalls,proto3" json:"tool_calls,omitempty"`
	ExecutionSteps []*ExecutionStep       `protobuf:"bytes,7,rep,name=execution_steps,json=executionSteps,proto3" json:"execution_steps,omitempty"`
	TokenUsage     *TokenUsage            `protobuf:"bytes,8,opt,name=token_usage,json=tokenUsage,proto3" json:"token_usage,omitempty"`
	DurationMs     int64                  `protobuf:"varint,9,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	ModelName      string                 `protobuf:"bytes,10,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	Status         RunStatus              `protobuf:"varint,11,opt,name=status,proto3,enum=lighthouse.v1.RunStatus" json:"status,omitempty"`
	StartedAt      *timestamp.Timestamp   `protobuf:"bytes,12,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	CompletedAt    *timestamp.Timestamp   `protobuf:"bytes,13,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	Metadata       map[string]string      `protobuf:"bytes,14,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	StationVersion string                 `protobuf:"bytes,15,opt,name=station_version,json=stationVersion,proto3" json:"station_version,omitempty"` // Station version for debugging/compatibility
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AgentRunData) Reset() {
	*x = AgentRunData{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentRunData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentRunData) ProtoMessage() {}

func (x *AgentRunData) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentRunData.ProtoReflect.Descriptor instead.
func (*AgentRunData) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{6}
}

func (x *AgentRunData) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *AgentRunData) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *AgentRunData) GetAgentName() string {
	if x != nil {
		return x.AgentName
	}
	return ""
}

func (x *AgentRunData) GetTask() string {
	if x != nil {
		return x.Task
	}
	return ""
}

func (x *AgentRunData) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

func (x *AgentRunData) GetToolCalls() []*ToolCall {
	if x != nil {
		return x.ToolCalls
	}
	return nil
}

func (x *AgentRunData) GetExecutionSteps() []*ExecutionStep {
	if x != nil {
		return x.ExecutionSteps
	}
	return nil
}

func (x *AgentRunData) GetTokenUsage() *TokenUsage {
	if x != nil {
		return x.TokenUsage
	}
	return nil
}

func (x *AgentRunData) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

func (x *AgentRunData) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *AgentRunData) GetStatus() RunStatus {
	if x != nil {
		return x.Status
	}
	return RunStatus_RUN_STATUS_UNSPECIFIED
}

func (x *AgentRunData) GetStartedAt() *timestamp.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *AgentRunData) GetCompletedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *AgentRunData) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AgentRunData) GetStationVersion() string {
	if x != nil {
		return x.StationVersion
	}
	return ""
}

type ToolCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ToolName      string                 `protobuf:"bytes,1,opt,name=tool_name,json=toolName,proto3" json:"tool_name,omitempty"`
	Parameters    map[string]string      `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // JSON-serialized parameters
	Result        string                 `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`                                                                                   // JSON-serialized result
	DurationMs    int64                  `protobuf:"varint,4,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	Success       bool                   `protobuf:"varint,5,opt,name=success,proto3" json:"success,omitempty"`
	Timestamp     *timestamp.Timestamp   `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToolCall) Reset() {
	*x = ToolCall{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolCall) ProtoMessage() {}

func (x *ToolCall) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolCall.ProtoReflect.Descriptor instead.
func (*ToolCall) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{7}
}

func (x *ToolCall) GetToolName() string {
	if x != nil {
		return x.ToolName
	}
	return ""
}

func (x *ToolCall) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *ToolCall) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *ToolCall) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

func (x *ToolCall) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ToolCall) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type ExecutionStep struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StepNumber    int32                  `protobuf:"varint,1,opt,name=step_number,json=stepNumber,proto3" json:"step_number,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Type          StepType               `protobuf:"varint,3,opt,name=type,proto3,enum=lighthouse.v1.StepType" json:"type,omitempty"`
	DurationMs    int64                  `protobuf:"varint,4,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	Timestamp     *timestamp.Timestamp   `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecutionStep) Reset() {
	*x = ExecutionStep{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutionStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionStep) ProtoMessage() {}

func (x *ExecutionStep) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionStep.ProtoReflect.Descriptor instead.
func (*ExecutionStep) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{8}
}

func (x *ExecutionStep) GetStepNumber() int32 {
	if x != nil {
		return x.StepNumber
	}
	return 0
}

func (x *ExecutionStep) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExecutionStep) GetType() StepType {
	if x != nil {
		return x.Type
	}
	return StepType_STEP_TYPE_UNSPECIFIED
}

func (x *ExecutionStep) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

func (x *ExecutionStep) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type TokenUsage struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	PromptTokens     int32                  `protobuf:"varint,1,opt,name=prompt_tokens,json=promptTokens,proto3" json:"prompt_tokens,omitempty"`
	CompletionTokens int32                  `protobuf:"varint,2,opt,name=completion_tokens,json=completionTokens,proto3" json:"completion_tokens,omitempty"`
	TotalTokens      int32                  `protobuf:"varint,3,opt,name=total_tokens,json=totalTokens,proto3" json:"total_tokens,omitempty"`
	CostUsd          float64                `protobuf:"fixed64,4,opt,name=cost_usd,json=costUsd,proto3" json:"cost_usd,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TokenUsage) Reset() {
	*x = TokenUsage{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenUsage) ProtoMessage() {}

func (x *TokenUsage) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenUsage.ProtoReflect.Descriptor instead.
func (*TokenUsage) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{9}
}

func (x *TokenUsage) GetPromptTokens() int32 {
	if x != nil {
		return x.PromptTokens
	}
	return 0
}

func (x *TokenUsage) GetCompletionTokens() int32 {
	if x != nil {
		return x.CompletionTokens
	}
	return 0
}

func (x *TokenUsage) GetTotalTokens() int32 {
	if x != nil {
		return x.TotalTokens
	}
	return 0
}

func (x *TokenUsage) GetCostUsd() float64 {
	if x != nil {
		return x.CostUsd
	}
	return 0
}

type EphemeralSnapshotRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RegistrationKey string                 `protobuf:"bytes,1,opt,name=registration_key,json=registrationKey,proto3" json:"registration_key,omitempty"` // Registration key as station ID
	Environment     string                 `protobuf:"bytes,2,opt,name=environment,proto3" json:"environment,omitempty"`                                // Environment name
	Source          RunSource              `protobuf:"varint,3,opt,name=source,proto3,enum=lighthouse.v1.RunSource" json:"source,omitempty"`            // Source type (should be RUN_SOURCE_CLI_SNAPSHOT)
	Context         *DeploymentContext     `protobuf:"bytes,4,opt,name=context,proto3" json:"context,omitempty"`                                        // Rich execution context
	RunData         *AgentRunData          `protobuf:"bytes,5,opt,name=run_data,json=runData,proto3" json:"run_data,omitempty"`                         // Complete run information
	System          *SystemSnapshot        `protobuf:"bytes,6,opt,name=system,proto3" json:"system,omitempty"`                                          // System state at execution time
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *EphemeralSnapshotRequest) Reset() {
	*x = EphemeralSnapshotRequest{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EphemeralSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EphemeralSnapshotRequest) ProtoMessage() {}

func (x *EphemeralSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EphemeralSnapshotRequest.ProtoReflect.Descriptor instead.
func (*EphemeralSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{10}
}

func (x *EphemeralSnapshotRequest) GetRegistrationKey() string {
	if x != nil {
		return x.RegistrationKey
	}
	return ""
}

func (x *EphemeralSnapshotRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *EphemeralSnapshotRequest) GetSource() RunSource {
	if x != nil {
		return x.Source
	}
	return RunSource_RUN_SOURCE_UNSPECIFIED
}

func (x *EphemeralSnapshotRequest) GetContext() *DeploymentContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *EphemeralSnapshotRequest) GetRunData() *AgentRunData {
	if x != nil {
		return x.RunData
	}
	return nil
}

func (x *EphemeralSnapshotRequest) GetSystem() *SystemSnapshot {
	if x != nil {
		return x.System
	}
	return nil
}

type EphemeralSnapshotResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	SnapshotId    string                 `protobuf:"bytes,3,opt,name=snapshot_id,json=snapshotId,proto3" json:"snapshot_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EphemeralSnapshotResponse) Reset() {
	*x = EphemeralSnapshotResponse{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EphemeralSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EphemeralSnapshotResponse) ProtoMessage() {}

func (x *EphemeralSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EphemeralSnapshotResponse.ProtoReflect.Descriptor instead.
func (*EphemeralSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{11}
}

func (x *EphemeralSnapshotResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *EphemeralSnapshotResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *EphemeralSnapshotResponse) GetSnapshotId() string {
	if x != nil {
		return x.SnapshotId
	}
	return ""
}

type DeploymentContext struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	CommandLine      string                 `protobuf:"bytes,1,opt,name=command_line,json=commandLine,proto3" json:"command_line,omitempty"`                                                               // Full stn command executed
	WorkingDirectory string                 `protobuf:"bytes,2,opt,name=working_directory,json=workingDirectory,proto3" json:"working_directory,omitempty"`                                                // Execution directory
	EnvVars          map[string]string      `protobuf:"bytes,3,rep,name=env_vars,json=envVars,proto3" json:"env_vars,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Relevant environment variables
	Arguments        []string               `protobuf:"bytes,4,rep,name=arguments,proto3" json:"arguments,omitempty"`                                                                                      // Command arguments
	GitBranch        string                 `protobuf:"bytes,5,opt,name=git_branch,json=gitBranch,proto3" json:"git_branch,omitempty"`                                                                     // Current git branch if in repo
	GitCommit        string                 `protobuf:"bytes,6,opt,name=git_commit,json=gitCommit,proto3" json:"git_commit,omitempty"`                                                                     // Current commit hash
	StationVersion   string                 `protobuf:"bytes,7,opt,name=station_version,json=stationVersion,proto3" json:"station_version,omitempty"`                                                      // Station version
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DeploymentContext) Reset() {
	*x = DeploymentContext{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeploymentContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentContext) ProtoMessage() {}

func (x *DeploymentContext) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentContext.ProtoReflect.Descriptor instead.
func (*DeploymentContext) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{12}
}

func (x *DeploymentContext) GetCommandLine() string {
	if x != nil {
		return x.CommandLine
	}
	return ""
}

func (x *DeploymentContext) GetWorkingDirectory() string {
	if x != nil {
		return x.WorkingDirectory
	}
	return ""
}

func (x *DeploymentContext) GetEnvVars() map[string]string {
	if x != nil {
		return x.EnvVars
	}
	return nil
}

func (x *DeploymentContext) GetArguments() []string {
	if x != nil {
		return x.Arguments
	}
	return nil
}

func (x *DeploymentContext) GetGitBranch() string {
	if x != nil {
		return x.GitBranch
	}
	return ""
}

func (x *DeploymentContext) GetGitCommit() string {
	if x != nil {
		return x.GitCommit
	}
	return ""
}

func (x *DeploymentContext) GetStationVersion() string {
	if x != nil {
		return x.StationVersion
	}
	return ""
}

type SystemSnapshot struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Agents         []*AgentConfig         `protobuf:"bytes,1,rep,name=agents,proto3" json:"agents,omitempty"`                                                                                 // All agents in environment
	McpServers     []*MCPConfig           `protobuf:"bytes,2,rep,name=mcp_servers,json=mcpServers,proto3" json:"mcp_servers,omitempty"`                                                       // All MCP server configs
	Variables      map[string]string      `protobuf:"bytes,3,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Template variables
	AvailableTools []*ToolInfo            `protobuf:"bytes,4,rep,name=available_tools,json=availableTools,proto3" json:"available_tools,omitempty"`                                           // Tool inventory
	Metrics        *SystemMetrics         `protobuf:"bytes,5,opt,name=metrics,proto3" json:"metrics,omitempty"`                                                                               // System performance at execution
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SystemSnapshot) Reset() {
	*x = SystemSnapshot{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemSnapshot) ProtoMessage() {}

func (x *SystemSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemSnapshot.ProtoReflect.Descriptor instead.
func (*SystemSnapshot) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{13}
}

func (x *SystemSnapshot) GetAgents() []*AgentConfig {
	if x != nil {
		return x.Agents
	}
	return nil
}

func (x *SystemSnapshot) GetMcpServers() []*MCPConfig {
	if x != nil {
		return x.McpServers
	}
	return nil
}

func (x *SystemSnapshot) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *SystemSnapshot) GetAvailableTools() []*ToolInfo {
	if x != nil {
		return x.AvailableTools
	}
	return nil
}

func (x *SystemSnapshot) GetMetrics() *SystemMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type SyncConfigRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RegistrationKey string                 `protobuf:"bytes,1,opt,name=registration_key,json=registrationKey,proto3" json:"registration_key,omitempty"`
	Agents          []*AgentConfig         `protobuf:"bytes,2,rep,name=agents,proto3" json:"agents,omitempty"`
	McpServers      []*MCPConfig           `protobuf:"bytes,3,rep,name=mcp_servers,json=mcpServers,proto3" json:"mcp_servers,omitempty"`
	Variables       map[string]string      `protobuf:"bytes,4,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ConfigVersion   int64                  `protobuf:"varint,5,opt,name=config_version,json=configVersion,proto3" json:"config_version,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SyncConfigRequest) Reset() {
	*x = SyncConfigRequest{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncConfigRequest) ProtoMessage() {}

func (x *SyncConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncConfigRequest.ProtoReflect.Descriptor instead.
func (*SyncConfigRequest) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{14}
}

func (x *SyncConfigRequest) GetRegistrationKey() string {
	if x != nil {
		return x.RegistrationKey
	}
	return ""
}

func (x *SyncConfigRequest) GetAgents() []*AgentConfig {
	if x != nil {
		return x.Agents
	}
	return nil
}

func (x *SyncConfigRequest) GetMcpServers() []*MCPConfig {
	if x != nil {
		return x.McpServers
	}
	return nil
}

func (x *SyncConfigRequest) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *SyncConfigRequest) GetConfigVersion() int64 {
	if x != nil {
		return x.ConfigVersion
	}
	return 0
}

type SyncConfigResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Success          bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message          string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	SyncedAgents     int32                  `protobuf:"varint,3,opt,name=synced_agents,json=syncedAgents,proto3" json:"synced_agents,omitempty"`
	SyncedMcpServers int32                  `protobuf:"varint,4,opt,name=synced_mcp_servers,json=syncedMcpServers,proto3" json:"synced_mcp_servers,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SyncConfigResponse) Reset() {
	*x = SyncConfigResponse{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncConfigResponse) ProtoMessage() {}

func (x *SyncConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncConfigResponse.ProtoReflect.Descriptor instead.
func (*SyncConfigResponse) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{15}
}

func (x *SyncConfigResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SyncConfigResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SyncConfigResponse) GetSyncedAgents() int32 {
	if x != nil {
		return x.SyncedAgents
	}
	return 0
}

func (x *SyncConfigResponse) GetSyncedMcpServers() int32 {
	if x != nil {
		return x.SyncedMcpServers
	}
	return 0
}

type AgentConfig struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description    string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	PromptTemplate string                 `protobuf:"bytes,4,opt,name=prompt_template,json=promptTemplate,proto3" json:"prompt_template,omitempty"`
	ModelName      string                 `protobuf:"bytes,5,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	MaxSteps       int32                  `protobuf:"varint,6,opt,name=max_steps,json=maxSteps,proto3" json:"max_steps,omitempty"`
	Tools          []string               `protobuf:"bytes,7,rep,name=tools,proto3" json:"tools,omitempty"`
	Variables      map[string]string      `protobuf:"bytes,8,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Tags           []string               `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty"`
	CreatedAt      *timestamp.Timestamp   `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamp.Timestamp   `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AgentConfig) Reset() {
	*x = AgentConfig{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentConfig) ProtoMessage() {}

func (x *AgentConfig) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentConfig.ProtoReflect.Descriptor instead.
func (*AgentConfig) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{16}
}

func (x *AgentConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AgentConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AgentConfig) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AgentConfig) GetPromptTemplate() string {
	if x != nil {
		return x.PromptTemplate
	}
	return ""
}

func (x *AgentConfig) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *AgentConfig) GetMaxSteps() int32 {
	if x != nil {
		return x.MaxSteps
	}
	return 0
}

func (x *AgentConfig) GetTools() []string {
	if x != nil {
		return x.Tools
	}
	return nil
}

func (x *AgentConfig) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *AgentConfig) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *AgentConfig) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AgentConfig) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type MCPConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Command       string                 `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	Args          []string               `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`
	EnvVars       map[string]string      `protobuf:"bytes,4,rep,name=env_vars,json=envVars,proto3" json:"env_vars,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Variables     map[string]string      `protobuf:"bytes,5,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Enabled       bool                   `protobuf:"varint,6,opt,name=enabled,proto3" json:"enabled,omitempty"`
	CreatedAt     *timestamp.Timestamp   `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamp.Timestamp   `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MCPConfig) Reset() {
	*x = MCPConfig{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MCPConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MCPConfig) ProtoMessage() {}

func (x *MCPConfig) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MCPConfig.ProtoReflect.Descriptor instead.
func (*MCPConfig) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{17}
}

func (x *MCPConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MCPConfig) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *MCPConfig) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *MCPConfig) GetEnvVars() map[string]string {
	if x != nil {
		return x.EnvVars
	}
	return nil
}

func (x *MCPConfig) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *MCPConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *MCPConfig) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *MCPConfig) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ToolInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	McpServer     string                 `protobuf:"bytes,3,opt,name=mcp_server,json=mcpServer,proto3" json:"mcp_server,omitempty"`
	Categories    []string               `protobuf:"bytes,4,rep,name=categories,proto3" json:"categories,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToolInfo) Reset() {
	*x = ToolInfo{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolInfo) ProtoMessage() {}

func (x *ToolInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolInfo.ProtoReflect.Descriptor instead.
func (*ToolInfo) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{18}
}

func (x *ToolInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ToolInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ToolInfo) GetMcpServer() string {
	if x != nil {
		return x.McpServer
	}
	return ""
}

func (x *ToolInfo) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

type ConnectRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RegistrationKey string                 `protobuf:"bytes,1,opt,name=registration_key,json=registrationKey,proto3" json:"registration_key,omitempty"`
	Environment     string                 `protobuf:"bytes,2,opt,name=environment,proto3" json:"environment,omitempty"`
	Metrics         *SystemMetrics         `protobuf:"bytes,3,opt,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{19}
}

func (x *ConnectRequest) GetRegistrationKey() string {
	if x != nil {
		return x.RegistrationKey
	}
	return ""
}

func (x *ConnectRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *ConnectRequest) GetMetrics() *SystemMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type CloudShipCommand struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Command:
	//
	//	*CloudShipCommand_CreateAgent
	//	*CloudShipCommand_UpdateAgent
	//	*CloudShipCommand_DeleteAgent
	//	*CloudShipCommand_SyncMcp
	//	*CloudShipCommand_ExecuteAgent
	//	*CloudShipCommand_GetEnv
	Command       isCloudShipCommand_Command `protobuf_oneof:"command"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloudShipCommand) Reset() {
	*x = CloudShipCommand{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloudShipCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudShipCommand) ProtoMessage() {}

func (x *CloudShipCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudShipCommand.ProtoReflect.Descriptor instead.
func (*CloudShipCommand) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{20}
}

func (x *CloudShipCommand) GetCommand() isCloudShipCommand_Command {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *CloudShipCommand) GetCreateAgent() *CreateAgentCommand {
	if x != nil {
		if x, ok := x.Command.(*CloudShipCommand_CreateAgent); ok {
			return x.CreateAgent
		}
	}
	return nil
}

func (x *CloudShipCommand) GetUpdateAgent() *UpdateAgentCommand {
	if x != nil {
		if x, ok := x.Command.(*CloudShipCommand_UpdateAgent); ok {
			return x.UpdateAgent
		}
	}
	return nil
}

func (x *CloudShipCommand) GetDeleteAgent() *DeleteAgentCommand {
	if x != nil {
		if x, ok := x.Command.(*CloudShipCommand_DeleteAgent); ok {
			return x.DeleteAgent
		}
	}
	return nil
}

func (x *CloudShipCommand) GetSyncMcp() *SyncMCPServersCommand {
	if x != nil {
		if x, ok := x.Command.(*CloudShipCommand_SyncMcp); ok {
			return x.SyncMcp
		}
	}
	return nil
}

func (x *CloudShipCommand) GetExecuteAgent() *ExecuteAgentCommand {
	if x != nil {
		if x, ok := x.Command.(*CloudShipCommand_ExecuteAgent); ok {
			return x.ExecuteAgent
		}
	}
	return nil
}

func (x *CloudShipCommand) GetGetEnv() *GetEnvironmentCommand {
	if x != nil {
		if x, ok := x.Command.(*CloudShipCommand_GetEnv); ok {
			return x.GetEnv
		}
	}
	return nil
}

type isCloudShipCommand_Command interface {
	isCloudShipCommand_Command()
}

type CloudShipCommand_CreateAgent struct {
	CreateAgent *CreateAgentCommand `protobuf:"bytes,1,opt,name=create_agent,json=createAgent,proto3,oneof"`
}

type CloudShipCommand_UpdateAgent struct {
	UpdateAgent *UpdateAgentCommand `protobuf:"bytes,2,opt,name=update_agent,json=updateAgent,proto3,oneof"`
}

type CloudShipCommand_DeleteAgent struct {
	DeleteAgent *DeleteAgentCommand `protobuf:"bytes,3,opt,name=delete_agent,json=deleteAgent,proto3,oneof"`
}

type CloudShipCommand_SyncMcp struct {
	SyncMcp *SyncMCPServersCommand `protobuf:"bytes,4,opt,name=sync_mcp,json=syncMcp,proto3,oneof"`
}

type CloudShipCommand_ExecuteAgent struct {
	ExecuteAgent *ExecuteAgentCommand `protobuf:"bytes,5,opt,name=execute_agent,json=executeAgent,proto3,oneof"`
}

type CloudShipCommand_GetEnv struct {
	GetEnv *GetEnvironmentCommand `protobuf:"bytes,6,opt,name=get_env,json=getEnv,proto3,oneof"`
}

func (*CloudShipCommand_CreateAgent) isCloudShipCommand_Command() {}

func (*CloudShipCommand_UpdateAgent) isCloudShipCommand_Command() {}

func (*CloudShipCommand_DeleteAgent) isCloudShipCommand_Command() {}

func (*CloudShipCommand_SyncMcp) isCloudShipCommand_Command() {}

func (*CloudShipCommand_ExecuteAgent) isCloudShipCommand_Command() {}

func (*CloudShipCommand_GetEnv) isCloudShipCommand_Command() {}

type CreateAgentCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Config        *AgentConfig           `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAgentCommand) Reset() {
	*x = CreateAgentCommand{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAgentCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAgentCommand) ProtoMessage() {}

func (x *CreateAgentCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAgentCommand.ProtoReflect.Descriptor instead.
func (*CreateAgentCommand) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{21}
}

func (x *CreateAgentCommand) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *CreateAgentCommand) GetConfig() *AgentConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type UpdateAgentCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Config        *AgentConfig           `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAgentCommand) Reset() {
	*x = UpdateAgentCommand{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAgentCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAgentCommand) ProtoMessage() {}

func (x *UpdateAgentCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAgentCommand.ProtoReflect.Descriptor instead.
func (*UpdateAgentCommand) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateAgentCommand) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *UpdateAgentCommand) GetConfig() *AgentConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type DeleteAgentCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAgentCommand) Reset() {
	*x = DeleteAgentCommand{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAgentCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAgentCommand) ProtoMessage() {}

func (x *DeleteAgentCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAgentCommand.ProtoReflect.Descriptor instead.
func (*DeleteAgentCommand) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteAgentCommand) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

type SyncMCPServersCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	McpServers    []*MCPConfig           `protobuf:"bytes,1,rep,name=mcp_servers,json=mcpServers,proto3" json:"mcp_servers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncMCPServersCommand) Reset() {
	*x = SyncMCPServersCommand{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncMCPServersCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncMCPServersCommand) ProtoMessage() {}

func (x *SyncMCPServersCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncMCPServersCommand.ProtoReflect.Descriptor instead.
func (*SyncMCPServersCommand) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{24}
}

func (x *SyncMCPServersCommand) GetMcpServers() []*MCPConfig {
	if x != nil {
		return x.McpServers
	}
	return nil
}

type ExecuteAgentCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Task          string                 `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	RunId         string                 `protobuf:"bytes,3,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	Variables     map[string]string      `protobuf:"bytes,4,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteAgentCommand) Reset() {
	*x = ExecuteAgentCommand{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteAgentCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteAgentCommand) ProtoMessage() {}

func (x *ExecuteAgentCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteAgentCommand.ProtoReflect.Descriptor instead.
func (*ExecuteAgentCommand) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{25}
}

func (x *ExecuteAgentCommand) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *ExecuteAgentCommand) GetTask() string {
	if x != nil {
		return x.Task
	}
	return ""
}

func (x *ExecuteAgentCommand) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *ExecuteAgentCommand) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

type GetEnvironmentCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Environment   string                 `protobuf:"bytes,1,opt,name=environment,proto3" json:"environment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEnvironmentCommand) Reset() {
	*x = GetEnvironmentCommand{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEnvironmentCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnvironmentCommand) ProtoMessage() {}

func (x *GetEnvironmentCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnvironmentCommand.ProtoReflect.Descriptor instead.
func (*GetEnvironmentCommand) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{26}
}

func (x *GetEnvironmentCommand) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

type SystemHealthRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RegistrationKey string                 `protobuf:"bytes,1,opt,name=registration_key,json=registrationKey,proto3" json:"registration_key,omitempty"`
	Environment     string                 `protobuf:"bytes,2,opt,name=environment,proto3" json:"environment,omitempty"`
	Status          SystemStatus           `protobuf:"varint,3,opt,name=status,proto3,enum=lighthouse.v1.SystemStatus" json:"status,omitempty"`
	Metrics         *SystemMetrics         `protobuf:"bytes,4,opt,name=metrics,proto3" json:"metrics,omitempty"`
	Timestamp       *timestamp.Timestamp   `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SystemHealthRequest) Reset() {
	*x = SystemHealthRequest{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemHealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemHealthRequest) ProtoMessage() {}

func (x *SystemHealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemHealthRequest.ProtoReflect.Descriptor instead.
func (*SystemHealthRequest) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{27}
}

func (x *SystemHealthRequest) GetRegistrationKey() string {
	if x != nil {
		return x.RegistrationKey
	}
	return ""
}

func (x *SystemHealthRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *SystemHealthRequest) GetStatus() SystemStatus {
	if x != nil {
		return x.Status
	}
	return SystemStatus_SYSTEM_STATUS_UNSPECIFIED
}

func (x *SystemHealthRequest) GetMetrics() *SystemMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *SystemHealthRequest) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type SystemHealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemHealthResponse) Reset() {
	*x = SystemHealthResponse{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemHealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemHealthResponse) ProtoMessage() {}

func (x *SystemHealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemHealthResponse.ProtoReflect.Descriptor instead.
func (*SystemHealthResponse) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{28}
}

func (x *SystemHealthResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SystemHealthResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SystemMetrics struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	CpuUsagePercent    float64                `protobuf:"fixed64,1,opt,name=cpu_usage_percent,json=cpuUsagePercent,proto3" json:"cpu_usage_percent,omitempty"`
	MemoryUsagePercent float64                `protobuf:"fixed64,2,opt,name=memory_usage_percent,json=memoryUsagePercent,proto3" json:"memory_usage_percent,omitempty"`
	DiskUsageMb        int64                  `protobuf:"varint,3,opt,name=disk_usage_mb,json=diskUsageMb,proto3" json:"disk_usage_mb,omitempty"`
	UptimeSeconds      int64                  `protobuf:"varint,4,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`
	ActiveConnections  int32                  `protobuf:"varint,5,opt,name=active_connections,json=activeConnections,proto3" json:"active_connections,omitempty"`
	ActiveRuns         int32                  `protobuf:"varint,6,opt,name=active_runs,json=activeRuns,proto3" json:"active_runs,omitempty"`
	NetworkInBytes     int64                  `protobuf:"varint,7,opt,name=network_in_bytes,json=networkInBytes,proto3" json:"network_in_bytes,omitempty"`
	NetworkOutBytes    int64                  `protobuf:"varint,8,opt,name=network_out_bytes,json=networkOutBytes,proto3" json:"network_out_bytes,omitempty"`
	AdditionalMetrics  map[string]string      `protobuf:"bytes,9,rep,name=additional_metrics,json=additionalMetrics,proto3" json:"additional_metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SystemMetrics) Reset() {
	*x = SystemMetrics{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMetrics) ProtoMessage() {}

func (x *SystemMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMetrics.ProtoReflect.Descriptor instead.
func (*SystemMetrics) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{29}
}

func (x *SystemMetrics) GetCpuUsagePercent() float64 {
	if x != nil {
		return x.CpuUsagePercent
	}
	return 0
}

func (x *SystemMetrics) GetMemoryUsagePercent() float64 {
	if x != nil {
		return x.MemoryUsagePercent
	}
	return 0
}

func (x *SystemMetrics) GetDiskUsageMb() int64 {
	if x != nil {
		return x.DiskUsageMb
	}
	return 0
}

func (x *SystemMetrics) GetUptimeSeconds() int64 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

func (x *SystemMetrics) GetActiveConnections() int32 {
	if x != nil {
		return x.ActiveConnections
	}
	return 0
}

func (x *SystemMetrics) GetActiveRuns() int32 {
	if x != nil {
		return x.ActiveRuns
	}
	return 0
}

func (x *SystemMetrics) GetNetworkInBytes() int64 {
	if x != nil {
		return x.NetworkInBytes
	}
	return 0
}

func (x *SystemMetrics) GetNetworkOutBytes() int64 {
	if x != nil {
		return x.NetworkOutBytes
	}
	return 0
}

func (x *SystemMetrics) GetAdditionalMetrics() map[string]string {
	if x != nil {
		return x.AdditionalMetrics
	}
	return nil
}

type HeartbeatRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RegistrationKey string                 `protobuf:"bytes,1,opt,name=registration_key,json=registrationKey,proto3" json:"registration_key,omitempty"`
	Environment     string                 `protobuf:"bytes,2,opt,name=environment,proto3" json:"environment,omitempty"`
	Status          SystemStatus           `protobuf:"varint,3,opt,name=status,proto3,enum=lighthouse.v1.SystemStatus" json:"status,omitempty"`
	Metrics         *SystemMetrics         `protobuf:"bytes,4,opt,name=metrics,proto3" json:"metrics,omitempty"`
	Timestamp       *timestamp.Timestamp   `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{30}
}

func (x *HeartbeatRequest) GetRegistrationKey() string {
	if x != nil {
		return x.RegistrationKey
	}
	return ""
}

func (x *HeartbeatRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *HeartbeatRequest) GetStatus() SystemStatus {
	if x != nil {
		return x.Status
	}
	return SystemStatus_SYSTEM_STATUS_UNSPECIFIED
}

func (x *HeartbeatRequest) GetMetrics() *SystemMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *HeartbeatRequest) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type HeartbeatResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Success         bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message         string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	PendingCommands []string               `protobuf:"bytes,3,rep,name=pending_commands,json=pendingCommands,proto3" json:"pending_commands,omitempty"`
	UpdatedConfig   *CloudShipConfig       `protobuf:"bytes,4,opt,name=updated_config,json=updatedConfig,proto3" json:"updated_config,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{31}
}

func (x *HeartbeatResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *HeartbeatResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HeartbeatResponse) GetPendingCommands() []string {
	if x != nil {
		return x.PendingCommands
	}
	return nil
}

func (x *HeartbeatResponse) GetUpdatedConfig() *CloudShipConfig {
	if x != nil {
		return x.UpdatedConfig
	}
	return nil
}

type ListToolsRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RegistrationKey string                 `protobuf:"bytes,1,opt,name=registration_key,json=registrationKey,proto3" json:"registration_key,omitempty"`
	Environment     string                 `protobuf:"bytes,2,opt,name=environment,proto3" json:"environment,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListToolsRequest) Reset() {
	*x = ListToolsRequest{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListToolsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListToolsRequest) ProtoMessage() {}

func (x *ListToolsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListToolsRequest.ProtoReflect.Descriptor instead.
func (*ListToolsRequest) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{32}
}

func (x *ListToolsRequest) GetRegistrationKey() string {
	if x != nil {
		return x.RegistrationKey
	}
	return ""
}

func (x *ListToolsRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

type ListToolsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tools         []*ToolInfo            `protobuf:"bytes,1,rep,name=tools,proto3" json:"tools,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListToolsResponse) Reset() {
	*x = ListToolsResponse{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListToolsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListToolsResponse) ProtoMessage() {}

func (x *ListToolsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListToolsResponse.ProtoReflect.Descriptor instead.
func (*ListToolsResponse) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{33}
}

func (x *ListToolsResponse) GetTools() []*ToolInfo {
	if x != nil {
		return x.Tools
	}
	return nil
}

type CallToolRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RegistrationKey string                 `protobuf:"bytes,1,opt,name=registration_key,json=registrationKey,proto3" json:"registration_key,omitempty"`
	Environment     string                 `protobuf:"bytes,2,opt,name=environment,proto3" json:"environment,omitempty"`
	ToolName        string                 `protobuf:"bytes,3,opt,name=tool_name,json=toolName,proto3" json:"tool_name,omitempty"`
	Parameters      map[string]string      `protobuf:"bytes,4,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CallToolRequest) Reset() {
	*x = CallToolRequest{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallToolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallToolRequest) ProtoMessage() {}

func (x *CallToolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallToolRequest.ProtoReflect.Descriptor instead.
func (*CallToolRequest) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{34}
}

func (x *CallToolRequest) GetRegistrationKey() string {
	if x != nil {
		return x.RegistrationKey
	}
	return ""
}

func (x *CallToolRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *CallToolRequest) GetToolName() string {
	if x != nil {
		return x.ToolName
	}
	return ""
}

func (x *CallToolRequest) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type CallToolResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Result        string                 `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallToolResponse) Reset() {
	*x = CallToolResponse{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallToolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallToolResponse) ProtoMessage() {}

func (x *CallToolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallToolResponse.ProtoReflect.Descriptor instead.
func (*CallToolResponse) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{35}
}

func (x *CallToolResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CallToolResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *CallToolResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type ListAgentsRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RegistrationKey string                 `protobuf:"bytes,1,opt,name=registration_key,json=registrationKey,proto3" json:"registration_key,omitempty"`
	Environment     string                 `protobuf:"bytes,2,opt,name=environment,proto3" json:"environment,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListAgentsRequest) Reset() {
	*x = ListAgentsRequest{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAgentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgentsRequest) ProtoMessage() {}

func (x *ListAgentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgentsRequest.ProtoReflect.Descriptor instead.
func (*ListAgentsRequest) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{36}
}

func (x *ListAgentsRequest) GetRegistrationKey() string {
	if x != nil {
		return x.RegistrationKey
	}
	return ""
}

func (x *ListAgentsRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

type ListAgentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Agents        []*AgentConfig         `protobuf:"bytes,1,rep,name=agents,proto3" json:"agents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAgentsResponse) Reset() {
	*x = ListAgentsResponse{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAgentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgentsResponse) ProtoMessage() {}

func (x *ListAgentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgentsResponse.ProtoReflect.Descriptor instead.
func (*ListAgentsResponse) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{37}
}

func (x *ListAgentsResponse) GetAgents() []*AgentConfig {
	if x != nil {
		return x.Agents
	}
	return nil
}

type ExecuteAgentRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RegistrationKey string                 `protobuf:"bytes,1,opt,name=registration_key,json=registrationKey,proto3" json:"registration_key,omitempty"`
	Environment     string                 `protobuf:"bytes,2,opt,name=environment,proto3" json:"environment,omitempty"`
	AgentId         string                 `protobuf:"bytes,3,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Task            string                 `protobuf:"bytes,4,opt,name=task,proto3" json:"task,omitempty"`
	Variables       map[string]string      `protobuf:"bytes,5,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ExecuteAgentRequest) Reset() {
	*x = ExecuteAgentRequest{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteAgentRequest) ProtoMessage() {}

func (x *ExecuteAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteAgentRequest.ProtoReflect.Descriptor instead.
func (*ExecuteAgentRequest) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{38}
}

func (x *ExecuteAgentRequest) GetRegistrationKey() string {
	if x != nil {
		return x.RegistrationKey
	}
	return ""
}

func (x *ExecuteAgentRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *ExecuteAgentRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *ExecuteAgentRequest) GetTask() string {
	if x != nil {
		return x.Task
	}
	return ""
}

func (x *ExecuteAgentRequest) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

type ExecuteAgentResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*ExecuteAgentResponse_Started
	//	*ExecuteAgentResponse_Step
	//	*ExecuteAgentResponse_Completed
	//	*ExecuteAgentResponse_Error
	Response      isExecuteAgentResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteAgentResponse) Reset() {
	*x = ExecuteAgentResponse{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteAgentResponse) ProtoMessage() {}

func (x *ExecuteAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteAgentResponse.ProtoReflect.Descriptor instead.
func (*ExecuteAgentResponse) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{39}
}

func (x *ExecuteAgentResponse) GetResponse() isExecuteAgentResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *ExecuteAgentResponse) GetStarted() *ExecutionStarted {
	if x != nil {
		if x, ok := x.Response.(*ExecuteAgentResponse_Started); ok {
			return x.Started
		}
	}
	return nil
}

func (x *ExecuteAgentResponse) GetStep() *ExecutionStep {
	if x != nil {
		if x, ok := x.Response.(*ExecuteAgentResponse_Step); ok {
			return x.Step
		}
	}
	return nil
}

func (x *ExecuteAgentResponse) GetCompleted() *ExecutionCompleted {
	if x != nil {
		if x, ok := x.Response.(*ExecuteAgentResponse_Completed); ok {
			return x.Completed
		}
	}
	return nil
}

func (x *ExecuteAgentResponse) GetError() *ExecutionError {
	if x != nil {
		if x, ok := x.Response.(*ExecuteAgentResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isExecuteAgentResponse_Response interface {
	isExecuteAgentResponse_Response()
}

type ExecuteAgentResponse_Started struct {
	Started *ExecutionStarted `protobuf:"bytes,1,opt,name=started,proto3,oneof"`
}

type ExecuteAgentResponse_Step struct {
	Step *ExecutionStep `protobuf:"bytes,2,opt,name=step,proto3,oneof"`
}

type ExecuteAgentResponse_Completed struct {
	Completed *ExecutionCompleted `protobuf:"bytes,3,opt,name=completed,proto3,oneof"`
}

type ExecuteAgentResponse_Error struct {
	Error *ExecutionError `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*ExecuteAgentResponse_Started) isExecuteAgentResponse_Response() {}

func (*ExecuteAgentResponse_Step) isExecuteAgentResponse_Response() {}

func (*ExecuteAgentResponse_Completed) isExecuteAgentResponse_Response() {}

func (*ExecuteAgentResponse_Error) isExecuteAgentResponse_Response() {}

type ExecutionStarted struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RunId         string                 `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	StartedAt     *timestamp.Timestamp   `protobuf:"bytes,2,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecutionStarted) Reset() {
	*x = ExecutionStarted{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutionStarted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionStarted) ProtoMessage() {}

func (x *ExecutionStarted) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionStarted.ProtoReflect.Descriptor instead.
func (*ExecutionStarted) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{40}
}

func (x *ExecutionStarted) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *ExecutionStarted) GetStartedAt() *timestamp.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

type ExecutionCompleted struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RunId         string                 `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	Result        string                 `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	TokenUsage    *TokenUsage            `protobuf:"bytes,3,opt,name=token_usage,json=tokenUsage,proto3" json:"token_usage,omitempty"`
	DurationMs    int64                  `protobuf:"varint,4,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	CompletedAt   *timestamp.Timestamp   `protobuf:"bytes,5,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecutionCompleted) Reset() {
	*x = ExecutionCompleted{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutionCompleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionCompleted) ProtoMessage() {}

func (x *ExecutionCompleted) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionCompleted.ProtoReflect.Descriptor instead.
func (*ExecutionCompleted) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{41}
}

func (x *ExecutionCompleted) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *ExecutionCompleted) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *ExecutionCompleted) GetTokenUsage() *TokenUsage {
	if x != nil {
		return x.TokenUsage
	}
	return nil
}

func (x *ExecutionCompleted) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

func (x *ExecutionCompleted) GetCompletedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

type ExecutionError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RunId         string                 `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	ErrorAt       *timestamp.Timestamp   `protobuf:"bytes,3,opt,name=error_at,json=errorAt,proto3" json:"error_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecutionError) Reset() {
	*x = ExecutionError{}
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutionError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionError) ProtoMessage() {}

func (x *ExecutionError) ProtoReflect() protoreflect.Message {
	mi := &file_internal_lighthouse_proto_lighthouse_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionError.ProtoReflect.Descriptor instead.
func (*ExecutionError) Descriptor() ([]byte, []int) {
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP(), []int{42}
}

func (x *ExecutionError) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *ExecutionError) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ExecutionError) GetErrorAt() *timestamp.Timestamp {
	if x != nil {
		return x.ErrorAt
	}
	return nil
}

var File_internal_lighthouse_proto_lighthouse_proto protoreflect.FileDescriptor

const file_internal_lighthouse_proto_lighthouse_proto_rawDesc = "" +
	"\n" +
	"*internal/lighthouse/proto/lighthouse.proto\x12\rlighthouse.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xaf\x03\n" +
	"\x16RegisterStationRequest\x12\x1d\n" +
	"\n" +
	"station_id\x18\x01 \x01(\tR\tstationId\x12)\n" +
	"\x10registration_key\x18\x02 \x01(\tR\x0fregistrationKey\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12)\n" +
	"\x10environment_name\x18\x04 \x01(\tR\x0fenvironmentName\x121\n" +
	"\x04mode\x18\x05 \x01(\x0e2\x1d.lighthouse.v1.DeploymentModeR\x04mode\x12F\n" +
	"\fcapabilities\x18\x06 \x01(\v2\".lighthouse.v1.StationCapabilitiesR\fcapabilities\x12O\n" +
	"\bmetadata\x18\a \x03(\v23.lighthouse.v1.RegisterStationRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xfd\x01\n" +
	"\x17RegisterStationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1d\n" +
	"\n" +
	"station_id\x18\x02 \x01(\tR\tstationId\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x129\n" +
	"\x06status\x18\x04 \x01(\x0e2!.lighthouse.v1.RegistrationStatusR\x06status\x12I\n" +
	"\x10cloudship_config\x18\x05 \x01(\v2\x1e.lighthouse.v1.CloudShipConfigR\x0fcloudshipConfig\"\x86\x02\n" +
	"\x13StationCapabilities\x12,\n" +
	"\x12can_execute_agents\x18\x01 \x01(\bR\x10canExecuteAgents\x12&\n" +
	"\x0fhas_mcp_servers\x18\x02 \x01(\bR\rhasMcpServers\x125\n" +
	"\x16supports_bidirectional\x18\x03 \x01(\bR\x15supportsBidirectional\x12\"\n" +
	"\fenvironments\x18\x04 \x03(\tR\fenvironments\x12\x1f\n" +
	"\vagent_count\x18\x05 \x01(\x05R\n" +
	"agentCount\x12\x1d\n" +
	"\n" +
	"tool_count\x18\x06 \x01(\x05R\ttoolCount\"\x8d\x02\n" +
	"\x0fCloudShipConfig\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12-\n" +
	"\x12heartbeat_interval\x18\x02 \x01(\x05R\x11heartbeatInterval\x12(\n" +
	"\x10auto_sync_config\x18\x03 \x01(\bR\x0eautoSyncConfig\x12H\n" +
	"\bsettings\x18\x04 \x03(\v2,.lighthouse.v1.CloudShipConfig.SettingsEntryR\bsettings\x1a;\n" +
	"\rSettingsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf8\x02\n" +
	"\x0eSendRunRequest\x12)\n" +
	"\x10registration_key\x18\x01 \x01(\tR\x0fregistrationKey\x12 \n" +
	"\venvironment\x18\x02 \x01(\tR\venvironment\x121\n" +
	"\x04mode\x18\x03 \x01(\x0e2\x1d.lighthouse.v1.DeploymentModeR\x04mode\x120\n" +
	"\x06source\x18\x04 \x01(\x0e2\x18.lighthouse.v1.RunSourceR\x06source\x126\n" +
	"\brun_data\x18\x05 \x01(\v2\x1b.lighthouse.v1.AgentRunDataR\arunData\x12A\n" +
	"\x06labels\x18\x06 \x03(\v2).lighthouse.v1.SendRunRequest.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\\\n" +
	"\x0fSendRunResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x15\n" +
	"\x06run_id\x18\x03 \x01(\tR\x05runId\"\xe3\x05\n" +
	"\fAgentRunData\x12\x15\n" +
	"\x06run_id\x18\x01 \x01(\tR\x05runId\x12\x19\n" +
	"\bagent_id\x18\x02 \x01(\tR\aagentId\x12\x1d\n" +
	"\n" +
	"agent_name\x18\x03 \x01(\tR\tagentName\x12\x12\n" +
	"\x04task\x18\x04 \x01(\tR\x04task\x12\x1a\n" +
	"\bresponse\x18\x05 \x01(\tR\bresponse\x126\n" +
	"\n" +
	"tool_calls\x18\x06 \x03(\v2\x17.lighthouse.v1.ToolCallR\ttoolCalls\x12E\n" +
	"\x0fexecution_steps\x18\a \x03(\v2\x1c.lighthouse.v1.ExecutionStepR\x0eexecutionSteps\x12:\n" +
	"\vtoken_usage\x18\b \x01(\v2\x19.lighthouse.v1.TokenUsageR\n" +
	"tokenUsage\x12\x1f\n" +
	"\vduration_ms\x18\t \x01(\x03R\n" +
	"durationMs\x12\x1d\n" +
	"\n" +
	"model_name\x18\n" +
	" \x01(\tR\tmodelName\x120\n" +
	"\x06status\x18\v \x01(\x0e2\x18.lighthouse.v1.RunStatusR\x06status\x129\n" +
	"\n" +
	"started_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12=\n" +
	"\fcompleted_at\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\x12E\n" +
	"\bmetadata\x18\x0e \x03(\v2).lighthouse.v1.AgentRunData.MetadataEntryR\bmetadata\x12'\n" +
	"\x0fstation_version\x18\x0f \x01(\tR\x0estationVersion\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xbc\x02\n" +
	"\bToolCall\x12\x1b\n" +
	"\ttool_name\x18\x01 \x01(\tR\btoolName\x12G\n" +
	"\n" +
	"parameters\x18\x02 \x03(\v2'.lighthouse.v1.ToolCall.ParametersEntryR\n" +
	"parameters\x12\x16\n" +
	"\x06result\x18\x03 \x01(\tR\x06result\x12\x1f\n" +
	"\vduration_ms\x18\x04 \x01(\x03R\n" +
	"durationMs\x12\x18\n" +
	"\asuccess\x18\x05 \x01(\bR\asuccess\x128\n" +
	"\ttimestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xda\x01\n" +
	"\rExecutionStep\x12\x1f\n" +
	"\vstep_number\x18\x01 \x01(\x05R\n" +
	"stepNumber\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12+\n" +
	"\x04type\x18\x03 \x01(\x0e2\x17.lighthouse.v1.StepTypeR\x04type\x12\x1f\n" +
	"\vduration_ms\x18\x04 \x01(\x03R\n" +
	"durationMs\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\x9c\x01\n" +
	"\n" +
	"TokenUsage\x12#\n" +
	"\rprompt_tokens\x18\x01 \x01(\x05R\fpromptTokens\x12+\n" +
	"\x11completion_tokens\x18\x02 \x01(\x05R\x10completionTokens\x12!\n" +
	"\ftotal_tokens\x18\x03 \x01(\x05R\vtotalTokens\x12\x19\n" +
	"\bcost_usd\x18\x04 \x01(\x01R\acostUsd\"\xc4\x02\n" +
	"\x18EphemeralSnapshotRequest\x12)\n" +
	"\x10registration_key\x18\x01 \x01(\tR\x0fregistrationKey\x12 \n" +
	"\venvironment\x18\x02 \x01(\tR\venvironment\x120\n" +
	"\x06source\x18\x03 \x01(\x0e2\x18.lighthouse.v1.RunSourceR\x06source\x12:\n" +
	"\acontext\x18\x04 \x01(\v2 .lighthouse.v1.DeploymentContextR\acontext\x126\n" +
	"\brun_data\x18\x05 \x01(\v2\x1b.lighthouse.v1.AgentRunDataR\arunData\x125\n" +
	"\x06system\x18\x06 \x01(\v2\x1d.lighthouse.v1.SystemSnapshotR\x06system\"p\n" +
	"\x19EphemeralSnapshotResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1f\n" +
	"\vsnapshot_id\x18\x03 \x01(\tR\n" +
	"snapshotId\"\xee\x02\n" +
	"\x11DeploymentContext\x12!\n" +
	"\fcommand_line\x18\x01 \x01(\tR\vcommandLine\x12+\n" +
	"\x11working_directory\x18\x02 \x01(\tR\x10workingDirectory\x12H\n" +
	"\benv_vars\x18\x03 \x03(\v2-.lighthouse.v1.DeploymentContext.EnvVarsEntryR\aenvVars\x12\x1c\n" +
	"\targuments\x18\x04 \x03(\tR\targuments\x12\x1d\n" +
	"\n" +
	"git_branch\x18\x05 \x01(\tR\tgitBranch\x12\x1d\n" +
	"\n" +
	"git_commit\x18\x06 \x01(\tR\tgitCommit\x12'\n" +
	"\x0fstation_version\x18\a \x01(\tR\x0estationVersion\x1a:\n" +
	"\fEnvVarsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x83\x03\n" +
	"\x0eSystemSnapshot\x122\n" +
	"\x06agents\x18\x01 \x03(\v2\x1a.lighthouse.v1.AgentConfigR\x06agents\x129\n" +
	"\vmcp_servers\x18\x02 \x03(\v2\x18.lighthouse.v1.MCPConfigR\n" +
	"mcpServers\x12J\n" +
	"\tvariables\x18\x03 \x03(\v2,.lighthouse.v1.SystemSnapshot.VariablesEntryR\tvariables\x12@\n" +
	"\x0favailable_tools\x18\x04 \x03(\v2\x17.lighthouse.v1.ToolInfoR\x0eavailableTools\x126\n" +
	"\ametrics\x18\x05 \x01(\v2\x1c.lighthouse.v1.SystemMetricsR\ametrics\x1a<\n" +
	"\x0eVariablesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe1\x02\n" +
	"\x11SyncConfigRequest\x12)\n" +
	"\x10registration_key\x18\x01 \x01(\tR\x0fregistrationKey\x122\n" +
	"\x06agents\x18\x02 \x03(\v2\x1a.lighthouse.v1.AgentConfigR\x06agents\x129\n" +
	"\vmcp_servers\x18\x03 \x03(\v2\x18.lighthouse.v1.MCPConfigR\n" +
	"mcpServers\x12M\n" +
	"\tvariables\x18\x04 \x03(\v2/.lighthouse.v1.SyncConfigRequest.VariablesEntryR\tvariables\x12%\n" +
	"\x0econfig_version\x18\x05 \x01(\x03R\rconfigVersion\x1a<\n" +
	"\x0eVariablesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9b\x01\n" +
	"\x12SyncConfigResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12#\n" +
	"\rsynced_agents\x18\x03 \x01(\x05R\fsyncedAgents\x12,\n" +
	"\x12synced_mcp_servers\x18\x04 \x01(\x05R\x10syncedMcpServers\"\xdf\x03\n" +
	"\vAgentConfig\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12'\n" +
	"\x0fprompt_template\x18\x04 \x01(\tR\x0epromptTemplate\x12\x1d\n" +
	"\n" +
	"model_name\x18\x05 \x01(\tR\tmodelName\x12\x1b\n" +
	"\tmax_steps\x18\x06 \x01(\x05R\bmaxSteps\x12\x14\n" +
	"\x05tools\x18\a \x03(\tR\x05tools\x12G\n" +
	"\tvariables\x18\b \x03(\v2).lighthouse.v1.AgentConfig.VariablesEntryR\tvariables\x12\x12\n" +
	"\x04tags\x18\t \x03(\tR\x04tags\x129\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x1a<\n" +
	"\x0eVariablesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe0\x03\n" +
	"\tMCPConfig\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\acommand\x18\x02 \x01(\tR\acommand\x12\x12\n" +
	"\x04args\x18\x03 \x03(\tR\x04args\x12@\n" +
	"\benv_vars\x18\x04 \x03(\v2%.lighthouse.v1.MCPConfig.EnvVarsEntryR\aenvVars\x12E\n" +
	"\tvariables\x18\x05 \x03(\v2'.lighthouse.v1.MCPConfig.VariablesEntryR\tvariables\x12\x18\n" +
	"\aenabled\x18\x06 \x01(\bR\aenabled\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x1a:\n" +
	"\fEnvVarsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a<\n" +
	"\x0eVariablesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x7f\n" +
	"\bToolInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"mcp_server\x18\x03 \x01(\tR\tmcpServer\x12\x1e\n" +
	"\n" +
	"categories\x18\x04 \x03(\tR\n" +
	"categories\"\x95\x01\n" +
	"\x0eConnectRequest\x12)\n" +
	"\x10registration_key\x18\x01 \x01(\tR\x0fregistrationKey\x12 \n" +
	"\venvironment\x18\x02 \x01(\tR\venvironment\x126\n" +
	"\ametrics\x18\x03 \x01(\v2\x1c.lighthouse.v1.SystemMetricsR\ametrics\"\xc4\x03\n" +
	"\x10CloudShipCommand\x12F\n" +
	"\fcreate_agent\x18\x01 \x01(\v2!.lighthouse.v1.CreateAgentCommandH\x00R\vcreateAgent\x12F\n" +
	"\fupdate_agent\x18\x02 \x01(\v2!.lighthouse.v1.UpdateAgentCommandH\x00R\vupdateAgent\x12F\n" +
	"\fdelete_agent\x18\x03 \x01(\v2!.lighthouse.v1.DeleteAgentCommandH\x00R\vdeleteAgent\x12A\n" +
	"\bsync_mcp\x18\x04 \x01(\v2$.lighthouse.v1.SyncMCPServersCommandH\x00R\asyncMcp\x12I\n" +
	"\rexecute_agent\x18\x05 \x01(\v2\".lighthouse.v1.ExecuteAgentCommandH\x00R\fexecuteAgent\x12?\n" +
	"\aget_env\x18\x06 \x01(\v2$.lighthouse.v1.GetEnvironmentCommandH\x00R\x06getEnvB\t\n" +
	"\acommand\"c\n" +
	"\x12CreateAgentCommand\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x122\n" +
	"\x06config\x18\x02 \x01(\v2\x1a.lighthouse.v1.AgentConfigR\x06config\"c\n" +
	"\x12UpdateAgentCommand\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x122\n" +
	"\x06config\x18\x02 \x01(\v2\x1a.lighthouse.v1.AgentConfigR\x06config\"/\n" +
	"\x12DeleteAgentCommand\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\"R\n" +
	"\x15SyncMCPServersCommand\x129\n" +
	"\vmcp_servers\x18\x01 \x03(\v2\x18.lighthouse.v1.MCPConfigR\n" +
	"mcpServers\"\xea\x01\n" +
	"\x13ExecuteAgentCommand\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12\x12\n" +
	"\x04task\x18\x02 \x01(\tR\x04task\x12\x15\n" +
	"\x06run_id\x18\x03 \x01(\tR\x05runId\x12O\n" +
	"\tvariables\x18\x04 \x03(\v21.lighthouse.v1.ExecuteAgentCommand.VariablesEntryR\tvariables\x1a<\n" +
	"\x0eVariablesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"9\n" +
	"\x15GetEnvironmentCommand\x12 \n" +
	"\venvironment\x18\x01 \x01(\tR\venvironment\"\x89\x02\n" +
	"\x13SystemHealthRequest\x12)\n" +
	"\x10registration_key\x18\x01 \x01(\tR\x0fregistrationKey\x12 \n" +
	"\venvironment\x18\x02 \x01(\tR\venvironment\x123\n" +
	"\x06status\x18\x03 \x01(\x0e2\x1b.lighthouse.v1.SystemStatusR\x06status\x126\n" +
	"\ametrics\x18\x04 \x01(\v2\x1c.lighthouse.v1.SystemMetricsR\ametrics\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"J\n" +
	"\x14SystemHealthResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x88\x04\n" +
	"\rSystemMetrics\x12*\n" +
	"\x11cpu_usage_percent\x18\x01 \x01(\x01R\x0fcpuUsagePercent\x120\n" +
	"\x14memory_usage_percent\x18\x02 \x01(\x01R\x12memoryUsagePercent\x12\"\n" +
	"\rdisk_usage_mb\x18\x03 \x01(\x03R\vdiskUsageMb\x12%\n" +
	"\x0euptime_seconds\x18\x04 \x01(\x03R\ruptimeSeconds\x12-\n" +
	"\x12active_connections\x18\x05 \x01(\x05R\x11activeConnections\x12\x1f\n" +
	"\vactive_runs\x18\x06 \x01(\x05R\n" +
	"activeRuns\x12(\n" +
	"\x10network_in_bytes\x18\a \x01(\x03R\x0enetworkInBytes\x12*\n" +
	"\x11network_out_bytes\x18\b \x01(\x03R\x0fnetworkOutBytes\x12b\n" +
	"\x12additional_metrics\x18\t \x03(\v23.lighthouse.v1.SystemMetrics.AdditionalMetricsEntryR\x11additionalMetrics\x1aD\n" +
	"\x16AdditionalMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x86\x02\n" +
	"\x10HeartbeatRequest\x12)\n" +
	"\x10registration_key\x18\x01 \x01(\tR\x0fregistrationKey\x12 \n" +
	"\venvironment\x18\x02 \x01(\tR\venvironment\x123\n" +
	"\x06status\x18\x03 \x01(\x0e2\x1b.lighthouse.v1.SystemStatusR\x06status\x126\n" +
	"\ametrics\x18\x04 \x01(\v2\x1c.lighthouse.v1.SystemMetricsR\ametrics\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\xb9\x01\n" +
	"\x11HeartbeatResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12)\n" +
	"\x10pending_commands\x18\x03 \x03(\tR\x0fpendingCommands\x12E\n" +
	"\x0eupdated_config\x18\x04 \x01(\v2\x1e.lighthouse.v1.CloudShipConfigR\rupdatedConfig\"_\n" +
	"\x10ListToolsRequest\x12)\n" +
	"\x10registration_key\x18\x01 \x01(\tR\x0fregistrationKey\x12 \n" +
	"\venvironment\x18\x02 \x01(\tR\venvironment\"B\n" +
	"\x11ListToolsResponse\x12-\n" +
	"\x05tools\x18\x01 \x03(\v2\x17.lighthouse.v1.ToolInfoR\x05tools\"\x8a\x02\n" +
	"\x0fCallToolRequest\x12)\n" +
	"\x10registration_key\x18\x01 \x01(\tR\x0fregistrationKey\x12 \n" +
	"\venvironment\x18\x02 \x01(\tR\venvironment\x12\x1b\n" +
	"\ttool_name\x18\x03 \x01(\tR\btoolName\x12N\n" +
	"\n" +
	"parameters\x18\x04 \x03(\v2..lighthouse.v1.CallToolRequest.ParametersEntryR\n" +
	"parameters\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"i\n" +
	"\x10CallToolResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x16\n" +
	"\x06result\x18\x02 \x01(\tR\x06result\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"`\n" +
	"\x11ListAgentsRequest\x12)\n" +
	"\x10registration_key\x18\x01 \x01(\tR\x0fregistrationKey\x12 \n" +
	"\venvironment\x18\x02 \x01(\tR\venvironment\"H\n" +
	"\x12ListAgentsResponse\x122\n" +
	"\x06agents\x18\x01 \x03(\v2\x1a.lighthouse.v1.AgentConfigR\x06agents\"\xa0\x02\n" +
	"\x13ExecuteAgentRequest\x12)\n" +
	"\x10registration_key\x18\x01 \x01(\tR\x0fregistrationKey\x12 \n" +
	"\venvironment\x18\x02 \x01(\tR\venvironment\x12\x19\n" +
	"\bagent_id\x18\x03 \x01(\tR\aagentId\x12\x12\n" +
	"\x04task\x18\x04 \x01(\tR\x04task\x12O\n" +
	"\tvariables\x18\x05 \x03(\v21.lighthouse.v1.ExecuteAgentRequest.VariablesEntryR\tvariables\x1a<\n" +
	"\x0eVariablesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8d\x02\n" +
	"\x14ExecuteAgentResponse\x12;\n" +
	"\astarted\x18\x01 \x01(\v2\x1f.lighthouse.v1.ExecutionStartedH\x00R\astarted\x122\n" +
	"\x04step\x18\x02 \x01(\v2\x1c.lighthouse.v1.ExecutionStepH\x00R\x04step\x12A\n" +
	"\tcompleted\x18\x03 \x01(\v2!.lighthouse.v1.ExecutionCompletedH\x00R\tcompleted\x125\n" +
	"\x05error\x18\x04 \x01(\v2\x1d.lighthouse.v1.ExecutionErrorH\x00R\x05errorB\n" +
	"\n" +
	"\bresponse\"d\n" +
	"\x10ExecutionStarted\x12\x15\n" +
	"\x06run_id\x18\x01 \x01(\tR\x05runId\x129\n" +
	"\n" +
	"started_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\"\xdf\x01\n" +
	"\x12ExecutionCompleted\x12\x15\n" +
	"\x06run_id\x18\x01 \x01(\tR\x05runId\x12\x16\n" +
	"\x06result\x18\x02 \x01(\tR\x06result\x12:\n" +
	"\vtoken_usage\x18\x03 \x01(\v2\x19.lighthouse.v1.TokenUsageR\n" +
	"tokenUsage\x12\x1f\n" +
	"\vduration_ms\x18\x04 \x01(\x03R\n" +
	"durationMs\x12=\n" +
	"\fcompleted_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\"\x83\x01\n" +
	"\x0eExecutionError\x12\x15\n" +
	"\x06run_id\x18\x01 \x01(\tR\x05runId\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x125\n" +
	"\berror_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\aerrorAt*\x80\x01\n" +
	"\x0eDeploymentMode\x12\x1f\n" +
	"\x1bDEPLOYMENT_MODE_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15DEPLOYMENT_MODE_STDIO\x10\x01\x12\x19\n" +
	"\x15DEPLOYMENT_MODE_SERVE\x10\x02\x12\x17\n" +
	"\x13DEPLOYMENT_MODE_CLI\x10\x03*\xd4\x01\n" +
	"\tRunStatus\x12\x1a\n" +
	"\x16RUN_STATUS_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11RUN_STATUS_QUEUED\x10\x01\x12\x19\n" +
	"\x15RUN_STATUS_DISPATCHED\x10\x02\x12\x16\n" +
	"\x12RUN_STATUS_RUNNING\x10\x03\x12\x18\n" +
	"\x14RUN_STATUS_COMPLETED\x10\x04\x12\x15\n" +
	"\x11RUN_STATUS_FAILED\x10\x05\x12\x16\n" +
	"\x12RUN_STATUS_TIMEOUT\x10\x06\x12\x18\n" +
	"\x14RUN_STATUS_CANCELLED\x10\a*{\n" +
	"\tRunSource\x12\x1a\n" +
	"\x16RUN_SOURCE_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14RUN_SOURCE_ANALYTICS\x10\x01\x12\x1b\n" +
	"\x17RUN_SOURCE_UI_TRIGGERED\x10\x02\x12\x1b\n" +
	"\x17RUN_SOURCE_CLI_SNAPSHOT\x10\x03*p\n" +
	"\bStepType\x12\x19\n" +
	"\x15STEP_TYPE_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13STEP_TYPE_TOOL_CALL\x10\x01\x12\x16\n" +
	"\x12STEP_TYPE_LLM_CALL\x10\x02\x12\x18\n" +
	"\x14STEP_TYPE_PROCESSING\x10\x03*\x9a\x01\n" +
	"\fSystemStatus\x12\x1d\n" +
	"\x19SYSTEM_STATUS_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15SYSTEM_STATUS_HEALTHY\x10\x01\x12\x19\n" +
	"\x15SYSTEM_STATUS_WARNING\x10\x02\x12\x1a\n" +
	"\x16SYSTEM_STATUS_CRITICAL\x10\x03\x12\x19\n" +
	"\x15SYSTEM_STATUS_OFFLINE\x10\x04*\xce\x01\n" +
	"\x12RegistrationStatus\x12#\n" +
	"\x1fREGISTRATION_STATUS_UNSPECIFIED\x10\x00\x12$\n" +
	" REGISTRATION_STATUS_UNREGISTERED\x10\x01\x12\"\n" +
	"\x1eREGISTRATION_STATUS_REGISTERED\x10\x02\x12#\n" +
	"\x1fREGISTRATION_STATUS_INVALID_KEY\x10\x03\x12$\n" +
	" REGISTRATION_STATUS_RATE_LIMITED\x10\x042\xa0\b\n" +
	"\x11LighthouseService\x12`\n" +
	"\x0fRegisterStation\x12%.lighthouse.v1.RegisterStationRequest\x1a&.lighthouse.v1.RegisterStationResponse\x12N\n" +
	"\tHeartbeat\x12\x1f.lighthouse.v1.HeartbeatRequest\x1a .lighthouse.v1.HeartbeatResponse\x12H\n" +
	"\aSendRun\x12\x1d.lighthouse.v1.SendRunRequest\x1a\x1e.lighthouse.v1.SendRunResponse\x12R\n" +
	"\rSendRunStream\x12\x1d.lighthouse.v1.SendRunRequest\x1a\x1e.lighthouse.v1.SendRunResponse(\x010\x01\x12j\n" +
	"\x15SendEphemeralSnapshot\x12'.lighthouse.v1.EphemeralSnapshotRequest\x1a(.lighthouse.v1.EphemeralSnapshotResponse\x12M\n" +
	"\aConnect\x12\x1d.lighthouse.v1.ConnectRequest\x1a\x1f.lighthouse.v1.CloudShipCommand(\x010\x01\x12X\n" +
	"\x11SyncConfiguration\x12 .lighthouse.v1.SyncConfigRequest\x1a!.lighthouse.v1.SyncConfigResponse\x12[\n" +
	"\x10SendSystemHealth\x12\".lighthouse.v1.SystemHealthRequest\x1a#.lighthouse.v1.SystemHealthResponse\x12N\n" +
	"\tListTools\x12\x1f.lighthouse.v1.ListToolsRequest\x1a .lighthouse.v1.ListToolsResponse\x12K\n" +
	"\bCallTool\x12\x1e.lighthouse.v1.CallToolRequest\x1a\x1f.lighthouse.v1.CallToolResponse\x12Q\n" +
	"\n" +
	"ListAgents\x12 .lighthouse.v1.ListAgentsRequest\x1a!.lighthouse.v1.ListAgentsResponse\x12Y\n" +
	"\fExecuteAgent\x12\".lighthouse.v1.ExecuteAgentRequest\x1a#.lighthouse.v1.ExecuteAgentResponse0\x01B2Z0github.com/cloudshipai/lighthouse/internal/protob\x06proto3"

var (
	file_internal_lighthouse_proto_lighthouse_proto_rawDescOnce sync.Once
	file_internal_lighthouse_proto_lighthouse_proto_rawDescData []byte
)

func file_internal_lighthouse_proto_lighthouse_proto_rawDescGZIP() []byte {
	file_internal_lighthouse_proto_lighthouse_proto_rawDescOnce.Do(func() {
		file_internal_lighthouse_proto_lighthouse_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_internal_lighthouse_proto_lighthouse_proto_rawDesc), len(file_internal_lighthouse_proto_lighthouse_proto_rawDesc)))
	})
	return file_internal_lighthouse_proto_lighthouse_proto_rawDescData
}

var file_internal_lighthouse_proto_lighthouse_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_internal_lighthouse_proto_lighthouse_proto_msgTypes = make([]protoimpl.MessageInfo, 58)
var file_internal_lighthouse_proto_lighthouse_proto_goTypes = []any{
	(DeploymentMode)(0),               // 0: lighthouse.v1.DeploymentMode
	(RunStatus)(0),                    // 1: lighthouse.v1.RunStatus
	(RunSource)(0),                    // 2: lighthouse.v1.RunSource
	(StepType)(0),                     // 3: lighthouse.v1.StepType
	(SystemStatus)(0),                 // 4: lighthouse.v1.SystemStatus
	(RegistrationStatus)(0),           // 5: lighthouse.v1.RegistrationStatus
	(*RegisterStationRequest)(nil),    // 6: lighthouse.v1.RegisterStationRequest
	(*RegisterStationResponse)(nil),   // 7: lighthouse.v1.RegisterStationResponse
	(*StationCapabilities)(nil),       // 8: lighthouse.v1.StationCapabilities
	(*CloudShipConfig)(nil),           // 9: lighthouse.v1.CloudShipConfig
	(*SendRunRequest)(nil),            // 10: lighthouse.v1.SendRunRequest
	(*SendRunResponse)(nil),           // 11: lighthouse.v1.SendRunResponse
	(*AgentRunData)(nil),              // 12: lighthouse.v1.AgentRunData
	(*ToolCall)(nil),                  // 13: lighthouse.v1.ToolCall
	(*ExecutionStep)(nil),             // 14: lighthouse.v1.ExecutionStep
	(*TokenUsage)(nil),                // 15: lighthouse.v1.TokenUsage
	(*EphemeralSnapshotRequest)(nil),  // 16: lighthouse.v1.EphemeralSnapshotRequest
	(*EphemeralSnapshotResponse)(nil), // 17: lighthouse.v1.EphemeralSnapshotResponse
	(*DeploymentContext)(nil),         // 18: lighthouse.v1.DeploymentContext
	(*SystemSnapshot)(nil),            // 19: lighthouse.v1.SystemSnapshot
	(*SyncConfigRequest)(nil),         // 20: lighthouse.v1.SyncConfigRequest
	(*SyncConfigResponse)(nil),        // 21: lighthouse.v1.SyncConfigResponse
	(*AgentConfig)(nil),               // 22: lighthouse.v1.AgentConfig
	(*MCPConfig)(nil),                 // 23: lighthouse.v1.MCPConfig
	(*ToolInfo)(nil),                  // 24: lighthouse.v1.ToolInfo
	(*ConnectRequest)(nil),            // 25: lighthouse.v1.ConnectRequest
	(*CloudShipCommand)(nil),          // 26: lighthouse.v1.CloudShipCommand
	(*CreateAgentCommand)(nil),        // 27: lighthouse.v1.CreateAgentCommand
	(*UpdateAgentCommand)(nil),        // 28: lighthouse.v1.UpdateAgentCommand
	(*DeleteAgentCommand)(nil),        // 29: lighthouse.v1.DeleteAgentCommand
	(*SyncMCPServersCommand)(nil),     // 30: lighthouse.v1.SyncMCPServersCommand
	(*ExecuteAgentCommand)(nil),       // 31: lighthouse.v1.ExecuteAgentCommand
	(*GetEnvironmentCommand)(nil),     // 32: lighthouse.v1.GetEnvironmentCommand
	(*SystemHealthRequest)(nil),       // 33: lighthouse.v1.SystemHealthRequest
	(*SystemHealthResponse)(nil),      // 34: lighthouse.v1.SystemHealthResponse
	(*SystemMetrics)(nil),             // 35: lighthouse.v1.SystemMetrics
	(*HeartbeatRequest)(nil),          // 36: lighthouse.v1.HeartbeatRequest
	(*HeartbeatResponse)(nil),         // 37: lighthouse.v1.HeartbeatResponse
	(*ListToolsRequest)(nil),          // 38: lighthouse.v1.ListToolsRequest
	(*ListToolsResponse)(nil),         // 39: lighthouse.v1.ListToolsResponse
	(*CallToolRequest)(nil),           // 40: lighthouse.v1.CallToolRequest
	(*CallToolResponse)(nil),          // 41: lighthouse.v1.CallToolResponse
	(*ListAgentsRequest)(nil),         // 42: lighthouse.v1.ListAgentsRequest
	(*ListAgentsResponse)(nil),        // 43: lighthouse.v1.ListAgentsResponse
	(*ExecuteAgentRequest)(nil),       // 44: lighthouse.v1.ExecuteAgentRequest
	(*ExecuteAgentResponse)(nil),      // 45: lighthouse.v1.ExecuteAgentResponse
	(*ExecutionStarted)(nil),          // 46: lighthouse.v1.ExecutionStarted
	(*ExecutionCompleted)(nil),        // 47: lighthouse.v1.ExecutionCompleted
	(*ExecutionError)(nil),            // 48: lighthouse.v1.ExecutionError
	nil,                               // 49: lighthouse.v1.RegisterStationRequest.MetadataEntry
	nil,                               // 50: lighthouse.v1.CloudShipConfig.SettingsEntry
	nil,                               // 51: lighthouse.v1.SendRunRequest.LabelsEntry
	nil,                               // 52: lighthouse.v1.AgentRunData.MetadataEntry
	nil,                               // 53: lighthouse.v1.ToolCall.ParametersEntry
	nil,                               // 54: lighthouse.v1.DeploymentContext.EnvVarsEntry
	nil,                               // 55: lighthouse.v1.SystemSnapshot.VariablesEntry
	nil,                               // 56: lighthouse.v1.SyncConfigRequest.VariablesEntry
	nil,                               // 57: lighthouse.v1.AgentConfig.VariablesEntry
	nil,                               // 58: lighthouse.v1.MCPConfig.EnvVarsEntry
	nil,                               // 59: lighthouse.v1.MCPConfig.VariablesEntry
	nil,                               // 60: lighthouse.v1.ExecuteAgentCommand.VariablesEntry
	nil,                               // 61: lighthouse.v1.SystemMetrics.AdditionalMetricsEntry
	nil,                               // 62: lighthouse.v1.CallToolRequest.ParametersEntry
	nil,                               // 63: lighthouse.v1.ExecuteAgentRequest.VariablesEntry
	(*timestamp.Timestamp)(nil),       // 64: google.protobuf.Timestamp
}
var file_internal_lighthouse_proto_lighthouse_proto_depIdxs = []int32{
	0,  // 0: lighthouse.v1.RegisterStationRequest.mode:type_name -> lighthouse.v1.DeploymentMode
	8,  // 1: lighthouse.v1.RegisterStationRequest.capabilities:type_name -> lighthouse.v1.StationCapabilities
	49, // 2: lighthouse.v1.RegisterStationRequest.metadata:type_name -> lighthouse.v1.RegisterStationRequest.MetadataEntry
	5,  // 3: lighthouse.v1.RegisterStationResponse.status:type_name -> lighthouse.v1.RegistrationStatus
	9,  // 4: lighthouse.v1.RegisterStationResponse.cloudship_config:type_name -> lighthouse.v1.CloudShipConfig
	50, // 5: lighthouse.v1.CloudShipConfig.settings:type_name -> lighthouse.v1.CloudShipConfig.SettingsEntry
	0,  // 6: lighthouse.v1.SendRunRequest.mode:type_name -> lighthouse.v1.DeploymentMode
	2,  // 7: lighthouse.v1.SendRunRequest.source:type_name -> lighthouse.v1.RunSource
	12, // 8: lighthouse.v1.SendRunRequest.run_data:type_name -> lighthouse.v1.AgentRunData
	51, // 9: lighthouse.v1.SendRunRequest.labels:type_name -> lighthouse.v1.SendRunRequest.LabelsEntry
	13, // 10: lighthouse.v1.AgentRunData.tool_calls:type_name -> lighthouse.v1.ToolCall
	14, // 11: lighthouse.v1.AgentRunData.execution_steps:type_name -> lighthouse.v1.ExecutionStep
	15, // 12: lighthouse.v1.AgentRunData.token_usage:type_name -> lighthouse.v1.TokenUsage
	1,  // 13: lighthouse.v1.AgentRunData.status:type_name -> lighthouse.v1.RunStatus
	64, // 14: lighthouse.v1.AgentRunData.started_at:type_name -> google.protobuf.Timestamp
	64, // 15: lighthouse.v1.AgentRunData.completed_at:type_name -> google.protobuf.Timestamp
	52, // 16: lighthouse.v1.AgentRunData.metadata:type_name -> lighthouse.v1.AgentRunData.MetadataEntry
	53, // 17: lighthouse.v1.ToolCall.parameters:type_name -> lighthouse.v1.ToolCall.ParametersEntry
	64, // 18: lighthouse.v1.ToolCall.timestamp:type_name -> google.protobuf.Timestamp
	3,  // 19: lighthouse.v1.ExecutionStep.type:type_name -> lighthouse.v1.StepType
	64, // 20: lighthouse.v1.ExecutionStep.timestamp:type_name -> google.protobuf.Timestamp
	2,  // 21: lighthouse.v1.EphemeralSnapshotRequest.source:type_name -> lighthouse.v1.RunSource
	18, // 22: lighthouse.v1.EphemeralSnapshotRequest.context:type_name -> lighthouse.v1.DeploymentContext
	12, // 23: lighthouse.v1.EphemeralSnapshotRequest.run_data:type_name -> lighthouse.v1.AgentRunData
	19, // 24: lighthouse.v1.EphemeralSnapshotRequest.system:type_name -> lighthouse.v1.SystemSnapshot
	54, // 25: lighthouse.v1.DeploymentContext.env_vars:type_name -> lighthouse.v1.DeploymentContext.EnvVarsEntry
	22, // 26: lighthouse.v1.SystemSnapshot.agents:type_name -> lighthouse.v1.AgentConfig
	23, // 27: lighthouse.v1.SystemSnapshot.mcp_servers:type_name -> lighthouse.v1.MCPConfig
	55, // 28: lighthouse.v1.SystemSnapshot.variables:type_name -> lighthouse.v1.SystemSnapshot.VariablesEntry
	24, // 29: lighthouse.v1.SystemSnapshot.available_tools:type_name -> lighthouse.v1.ToolInfo
	35, // 30: lighthouse.v1.SystemSnapshot.metrics:type_name -> lighthouse.v1.SystemMetrics
	22, // 31: lighthouse.v1.SyncConfigRequest.agents:type_name -> lighthouse.v1.AgentConfig
	23, // 32: lighthouse.v1.SyncConfigRequest.mcp_servers:type_name -> lighthouse.v1.MCPConfig
	56, // 33: lighthouse.v1.SyncConfigRequest.variables:type_name -> lighthouse.v1.SyncConfigRequest.VariablesEntry
	57, // 34: lighthouse.v1.AgentConfig.variables:type_name -> lighthouse.v1.AgentConfig.VariablesEntry
	64, // 35: lighthouse.v1.AgentConfig.created_at:type_name -> google.protobuf.Timestamp
	64, // 36: lighthouse.v1.AgentConfig.updated_at:type_name -> google.protobuf.Timestamp
	58, // 37: lighthouse.v1.MCPConfig.env_vars:type_name -> lighthouse.v1.MCPConfig.EnvVarsEntry
	59, // 38: lighthouse.v1.MCPConfig.variables:type_name -> lighthouse.v1.MCPConfig.VariablesEntry
	64, // 39: lighthouse.v1.MCPConfig.created_at:type_name -> google.protobuf.Timestamp
	64, // 40: lighthouse.v1.MCPConfig.updated_at:type_name -> google.protobuf.Timestamp
	35, // 41: lighthouse.v1.ConnectRequest.metrics:type_name -> lighthouse.v1.SystemMetrics
	27, // 42: lighthouse.v1.CloudShipCommand.create_agent:type_name -> lighthouse.v1.CreateAgentCommand
	28, // 43: lighthouse.v1.CloudShipCommand.update_agent:type_name -> lighthouse.v1.UpdateAgentCommand
	29, // 44: lighthouse.v1.CloudShipCommand.delete_agent:type_name -> lighthouse.v1.DeleteAgentCommand
	30, // 45: lighthouse.v1.CloudShipCommand.sync_mcp:type_name -> lighthouse.v1.SyncMCPServersCommand
	31, // 46: lighthouse.v1.CloudShipCommand.execute_agent:type_name -> lighthouse.v1.ExecuteAgentCommand
	32, // 47: lighthouse.v1.CloudShipCommand.get_env:type_name -> lighthouse.v1.GetEnvironmentCommand
	22, // 48: lighthouse.v1.CreateAgentCommand.config:type_name -> lighthouse.v1.AgentConfig
	22, // 49: lighthouse.v1.UpdateAgentCommand.config:type_name -> lighthouse.v1.AgentConfig
	23, // 50: lighthouse.v1.SyncMCPServersCommand.mcp_servers:type_name -> lighthouse.v1.MCPConfig
	60, // 51: lighthouse.v1.ExecuteAgentCommand.variables:type_name -> lighthouse.v1.ExecuteAgentCommand.VariablesEntry
	4,  // 52: lighthouse.v1.SystemHealthRequest.status:type_name -> lighthouse.v1.SystemStatus
	35, // 53: lighthouse.v1.SystemHealthRequest.metrics:type_name -> lighthouse.v1.SystemMetrics
	64, // 54: lighthouse.v1.SystemHealthRequest.timestamp:type_name -> google.protobuf.Timestamp
	61, // 55: lighthouse.v1.SystemMetrics.additional_metrics:type_name -> lighthouse.v1.SystemMetrics.AdditionalMetricsEntry
	4,  // 56: lighthouse.v1.HeartbeatRequest.status:type_name -> lighthouse.v1.SystemStatus
	35, // 57: lighthouse.v1.HeartbeatRequest.metrics:type_name -> lighthouse.v1.SystemMetrics
	64, // 58: lighthouse.v1.HeartbeatRequest.timestamp:type_name -> google.protobuf.Timestamp
	9,  // 59: lighthouse.v1.HeartbeatResponse.updated_config:type_name -> lighthouse.v1.CloudShipConfig
	24, // 60: lighthouse.v1.ListToolsResponse.tools:type_name -> lighthouse.v1.ToolInfo
	62, // 61: lighthouse.v1.CallToolRequest.parameters:type_name -> lighthouse.v1.CallToolRequest.ParametersEntry
	22, // 62: lighthouse.v1.ListAgentsResponse.agents:type_name -> lighthouse.v1.AgentConfig
	63, // 63: lighthouse.v1.ExecuteAgentRequest.variables:type_name -> lighthouse.v1.ExecuteAgentRequest.VariablesEntry
	46, // 64: lighthouse.v1.ExecuteAgentResponse.started:type_name -> lighthouse.v1.ExecutionStarted
	14, // 65: lighthouse.v1.ExecuteAgentResponse.step:type_name -> lighthouse.v1.ExecutionStep
	47, // 66: lighthouse.v1.ExecuteAgentResponse.completed:type_name -> lighthouse.v1.ExecutionCompleted
	48, // 67: lighthouse.v1.ExecuteAgentResponse.error:type_name -> lighthouse.v1.ExecutionError
	64, // 68: lighthouse.v1.ExecutionStarted.started_at:type_name -> google.protobuf.Timestamp
	15, // 69: lighthouse.v1.ExecutionCompleted.token_usage:type_name -> lighthouse.v1.TokenUsage
	64, // 70: lighthouse.v1.ExecutionCompleted.completed_at:type_name -> google.protobuf.Timestamp
	64, // 71: lighthouse.v1.ExecutionError.error_at:type_name -> google.protobuf.Timestamp
	6,  // 72: lighthouse.v1.LighthouseService.RegisterStation:input_type -> lighthouse.v1.RegisterStationRequest
	36, // 73: lighthouse.v1.LighthouseService.Heartbeat:input_type -> lighthouse.v1.HeartbeatRequest
	10, // 74: lighthouse.v1.LighthouseService.SendRun:input_type -> lighthouse.v1.SendRunRequest
	10, // 75: lighthouse.v1.LighthouseService.SendRunStream:input_type -> lighthouse.v1.SendRunRequest
	16, // 76: lighthouse.v1.LighthouseService.SendEphemeralSnapshot:input_type -> lighthouse.v1.EphemeralSnapshotRequest
	25, // 77: lighthouse.v1.LighthouseService.Connect:input_type -> lighthouse.v1.ConnectRequest
	20, // 78: lighthouse.v1.LighthouseService.SyncConfiguration:input_type -> lighthouse.v1.SyncConfigRequest
	33, // 79: lighthouse.v1.LighthouseService.SendSystemHealth:input_type -> lighthouse.v1.SystemHealthRequest
	38, // 80: lighthouse.v1.LighthouseService.ListTools:input_type -> lighthouse.v1.ListToolsRequest
	40, // 81: lighthouse.v1.LighthouseService.CallTool:input_type -> lighthouse.v1.CallToolRequest
	42, // 82: lighthouse.v1.LighthouseService.ListAgents:input_type -> lighthouse.v1.ListAgentsRequest
	44, // 83: lighthouse.v1.LighthouseService.ExecuteAgent:input_type -> lighthouse.v1.ExecuteAgentRequest
	7,  // 84: lighthouse.v1.LighthouseService.RegisterStation:output_type -> lighthouse.v1.RegisterStationResponse
	37, // 85: lighthouse.v1.LighthouseService.Heartbeat:output_type -> lighthouse.v1.HeartbeatResponse
	11, // 86: lighthouse.v1.LighthouseService.SendRun:output_type -> lighthouse.v1.SendRunResponse
	11, // 87: lighthouse.v1.LighthouseService.SendRunStream:output_type -> lighthouse.v1.SendRunResponse
	17, // 88: lighthouse.v1.LighthouseService.SendEphemeralSnapshot:output_type -> lighthouse.v1.EphemeralSnapshotResponse
	26, // 89: lighthouse.v1.LighthouseService.Connect:output_type -> lighthouse.v1.CloudShipCommand
	21, // 90: lighthouse.v1.LighthouseService.SyncConfiguration:output_type -> lighthouse.v1.SyncConfigResponse
	34, // 91: lighthouse.v1.LighthouseService.SendSystemHealth:output_type -> lighthouse.v1.SystemHealthResponse
	39, // 92: lighthouse.v1.LighthouseService.ListTools:output_type -> lighthouse.v1.ListToolsResponse
	41, // 93: lighthouse.v1.LighthouseService.CallTool:output_type -> lighthouse.v1.CallToolResponse
	43, // 94: lighthouse.v1.LighthouseService.ListAgents:output_type -> lighthouse.v1.ListAgentsResponse
	45, // 95: lighthouse.v1.LighthouseService.ExecuteAgent:output_type -> lighthouse.v1.ExecuteAgentResponse
	84, // [84:96] is the sub-list for method output_type
	72, // [72:84] is the sub-list for method input_type
	72, // [72:72] is the sub-list for extension type_name
	72, // [72:72] is the sub-list for extension extendee
	0,  // [0:72] is the sub-list for field type_name
}

func init() { file_internal_lighthouse_proto_lighthouse_proto_init() }
func file_internal_lighthouse_proto_lighthouse_proto_init() {
	if File_internal_lighthouse_proto_lighthouse_proto != nil {
		return
	}
	file_internal_lighthouse_proto_lighthouse_proto_msgTypes[20].OneofWrappers = []any{
		(*CloudShipCommand_CreateAgent)(nil),
		(*CloudShipCommand_UpdateAgent)(nil),
		(*CloudShipCommand_DeleteAgent)(nil),
		(*CloudShipCommand_SyncMcp)(nil),
		(*CloudShipCommand_ExecuteAgent)(nil),
		(*CloudShipCommand_GetEnv)(nil),
	}
	file_internal_lighthouse_proto_lighthouse_proto_msgTypes[39].OneofWrappers = []any{
		(*ExecuteAgentResponse_Started)(nil),
		(*ExecuteAgentResponse_Step)(nil),
		(*ExecuteAgentResponse_Completed)(nil),
		(*ExecuteAgentResponse_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_lighthouse_proto_lighthouse_proto_rawDesc), len(file_internal_lighthouse_proto_lighthouse_proto_rawDesc)),
			NumEnums:      6,
			NumMessages:   58,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_lighthouse_proto_lighthouse_proto_goTypes,
		DependencyIndexes: file_internal_lighthouse_proto_lighthouse_proto_depIdxs,
		EnumInfos:         file_internal_lighthouse_proto_lighthouse_proto_enumTypes,
		MessageInfos:      file_internal_lighthouse_proto_lighthouse_proto_msgTypes,
	}.Build()
	File_internal_lighthouse_proto_lighthouse_proto = out.File
	file_internal_lighthouse_proto_lighthouse_proto_goTypes = nil
	file_internal_lighthouse_proto_lighthouse_proto_depIdxs = nil
}
