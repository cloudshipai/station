AWSTemplateFormatVersion: '2010-09-09'
Description: Simple Station {{.EnvironmentName}} deployment on AWS ECS Fargate

Parameters:
  OpenAIAPIKey:
    Type: String
    NoEcho: true
    Description: OpenAI API Key
    Default: "{{.OpenAIAPIKey}}"

Resources:
  # ECS Cluster
  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: station-{{.EnvironmentName}}

  # CloudWatch Logs
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/station-{{.EnvironmentName}}
      RetentionInDays: 7

  # Task Execution Role
  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  # Task Definition
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: station-{{.EnvironmentName}}
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      Cpu: '512'
      Memory: '1024'
      ExecutionRoleArn: !GetAtt TaskRole.Arn
      ContainerDefinitions:
        - Name: station
          Image: {{.DockerImage}}
          Essential: true
          PortMappings:
            - ContainerPort: {{.APIPort}}
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
          Environment:
            - Name: OPENAI_API_KEY
              Value: !Ref OpenAIAPIKey
            - Name: STATION_AI_PROVIDER
              Value: {{.AIProvider}}
            - Name: STATION_AI_MODEL
              Value: {{.AIModel}}
{{range $key, $value := .EnvironmentVariables}}
            - Name: {{$key}}
              Value: "{{$value}}"
{{end}}

  # Security Group
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Station {{.EnvironmentName}}
      VpcId: !Ref AWS::AccountId  # Use default VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: {{.APIPort}}
          ToPort: {{.APIPort}}
          CidrIp: 0.0.0.0/0

  # ECS Service (uses default VPC)
  Service:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: station-{{.EnvironmentName}}
      Cluster: !Ref Cluster
      TaskDefinition: !Ref TaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets: !GetAZs
          SecurityGroups: [!Ref SecurityGroup]

Outputs:
  ClusterName:
    Value: !Ref Cluster
  ServiceName:
    Value: !GetAtt Service.Name
