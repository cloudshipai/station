apiVersion: apps/v1
kind: Deployment
metadata:
  name: station
  labels:
    app: station
    version: v0.2.0
spec:
  replicas: 1  # Single replica for SQLite + Litestream
  strategy:
    type: Recreate  # Ensure clean database transitions
  selector:
    matchLabels:
      app: station
  template:
    metadata:
      labels:
        app: station
    spec:
      containers:
      - name: station
        image: station:production
        ports:
        - containerPort: 8080
          name: http
        env:
        # Litestream S3 Configuration
        - name: LITESTREAM_S3_BUCKET
          value: "your-station-backups"
        - name: LITESTREAM_S3_REGION
          value: "us-east-1"
        - name: LITESTREAM_S3_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: station-secrets
              key: s3-access-key-id
        - name: LITESTREAM_S3_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: station-secrets
              key: s3-secret-access-key
        
        # Station Configuration
        - name: PORT
          value: "8080"
        - name: DATABASE_PATH
          value: "/data/station.db"
        - name: STATION_ENV
          value: "production"
        
        # OpenAI/Anthropic API Keys (example)
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: station-secrets
              key: openai-api-key
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: station-secrets
              key: anthropic-api-key
              
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1"
            
        volumeMounts:
        - name: data
          mountPath: /data
        - name: backup
          mountPath: /backup
          
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          
      volumes:
      - name: data
        emptyDir: {}  # Ephemeral storage - data persists via Litestream
      - name: backup
        emptyDir: {}  # Local backup storage
        
      # Graceful shutdown
      terminationGracePeriodSeconds: 60

---
apiVersion: v1
kind: Service
metadata:
  name: station-service
spec:
  selector:
    app: station
  ports:
  - name: http
    port: 80
    targetPort: 8080
    protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: Secret
metadata:
  name: station-secrets
type: Opaque
stringData:
  # Litestream S3 credentials
  s3-access-key-id: "YOUR_S3_ACCESS_KEY_ID"
  s3-secret-access-key: "YOUR_S3_SECRET_ACCESS_KEY"
  
  # AI provider API keys
  openai-api-key: "YOUR_OPENAI_API_KEY"
  anthropic-api-key: "YOUR_ANTHROPIC_API_KEY"
  
  # Add other secrets as needed
  # database-password: "YOUR_DB_PASSWORD"
  # slack-webhook-url: "YOUR_SLACK_WEBHOOK"