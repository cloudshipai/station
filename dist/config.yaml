version: 2
project_name: station
env:
  - GO111MODULE=on
release:
  github:
    owner: cloudshipai
    name: station
  name_template: Station {{.Version}}
  header: "## Station {{.Version}} \U0001F682\n\nWelcome to Station {{.Version}}! This release includes improvements to the AI infrastructure platform that makes MCP servers as easy to discover, configure, and deploy as Docker containers.\n\n### Installation\n\n**One-liner install:**\n```bash\ncurl -sSL https://getstation.cloudshipai.com | bash\n```\n\n**Or with specific version:**\n```bash\ncurl -sSL https://getstation.cloudshipai.com | bash -s -- --version {{.Tag}}\n```\n\n**Manual download:**\nDownload the appropriate binary for your platform from the assets below.\n\n**Go install:**\n```bash\ngo install github.com/cloudshipai/station/cmd/main@{{.Tag}}\n```\n"
  footer: "### What's Station?\n\nStation transforms complex MCP server setup from hours of configuration into a 30-second guided wizard. Think of it as the \"package manager for AI agents.\"\n\n**Key Features:**\n- \U0001F9D9 AI-powered MCP server discovery from GitHub URLs\n- \U0001F4CB Interactive configuration wizards with validation\n- \U0001F680 One-command deployment from repo to running server\n- \U0001F916 Revolutionary AI agent platform with smart context management\n- \U0001F512 Enterprise security with local and remote deployment modes\n\n### Getting Started\n\n```bash\n# Initialize Station\nstn init\n\n# Discover and deploy any MCP server from GitHub\nstn load https://github.com/modelcontextprotocol/servers/tree/main/src/filesystem\n\n# Access admin interface\nssh admin@localhost -p 2222\n```\n\n**Full Changelog**: https://github.com/cloudshipai/station/compare/{{.PreviousTag}}...{{.Tag}}\n"
builds:
  - id: station
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    goarm:
      - "6"
    gomips:
      - hardfloat
    goamd64:
      - v1
    targets:
      - linux_amd64_v1
      - linux_arm64
      - darwin_amd64_v1
      - darwin_arm64
      - windows_amd64_v1
    ignore:
      - goos: windows
        goarch: arm64
    dir: .
    main: ./cmd/main
    binary: stn
    builder: go
    gobinary: go
    command: build
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
      - -X main.builtBy=goreleaser
    flags:
      - -trimpath
    env:
      - CGO_ENABLED=0
archives:
  - id: station
    builds:
      - station
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'
    format: tar.gz
    format_overrides:
      - goos: windows
        format: zip
    files:
      - src: README.md
      - src: LICENSE
      - src: CONTRIBUTING.md
snapshot:
  version_template: '{{ .Version }}-SNAPSHOT-{{ .ShortCommit }}'
checksum:
  name_template: checksums.txt
  algorithm: sha256
publishers:
  - name: fury.io
    ids:
      - station
    cmd: curl -F package=@{{ .ArtifactPath }} https://push.fury.io/cloudshipai/
    env:
      - FURY_TOKEN={{ .Env.FURY_TOKEN }}
changelog:
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^chore:'
      - '^ci:'
  sort: asc
  use: github
  format: '{{ .SHA }}: {{ .Message }} ({{ with .AuthorUsername }}@{{ . }}{{ else }}{{ .AuthorName }} <{{ .AuthorEmail }}>{{ end }})'
  groups:
    - title: "\U0001F680 Features"
      regexp: ^.*feat[(\w)]*:+.*$
    - title: "\U0001F41B Bug fixes"
      regexp: ^.*fix[(\w)]*:+.*$
      order: 1
    - title: "\U0001F4DA Documentation"
      regexp: ^.*docs[(\w)]*:+.*$
      order: 2
    - title: "\U0001F9EA Tests"
      regexp: ^.*test[(\w)]*:+.*$
      order: 3
    - title: Other
      order: 999
dist: dist
env_files:
  github_token: ~/.config/goreleaser/github_token
  gitlab_token: ~/.config/goreleaser/gitlab_token
  gitea_token: ~/.config/goreleaser/gitea_token
before:
  hooks:
    - go mod tidy
    - go generate ./...
source:
  name_template: '{{ .ProjectName }}-{{ .Version }}'
  format: tar.gz
gomod:
  gobinary: go
announce:
  twitter:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  mastodon:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    server: ""
  reddit:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    url_template: '{{ .ReleaseURL }}'
  slack:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    username: GoReleaser
  discord:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    author: GoReleaser
    color: "3888754"
    icon_url: https://goreleaser.com/static/avatar.png
  teams:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    color: '#2D313E'
    icon_url: https://goreleaser.com/static/avatar.png
  smtp:
    subject_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    body_template: 'You can view details from: {{ .ReleaseURL }}'
  mattermost:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    username: GoReleaser
  linkedin:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  telegram:
    message_template: '{{ mdv2escape .ProjectName }} {{ mdv2escape .Tag }} is out{{ mdv2escape "!" }} Check it out at {{ mdv2escape .ReleaseURL }}'
    parse_mode: MarkdownV2
  webhook:
    message_template: '{ "message": "{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}"}'
    content_type: application/json; charset=utf-8
  opencollective:
    title_template: '{{ .Tag }}'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out!<br/>Check it out at <a href="{{ .ReleaseURL }}">{{ .ReleaseURL }}</a>'
  bluesky:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
git:
  tag_sort: -version:refname
github_urls:
  download: https://github.com
gitlab_urls:
  download: https://gitlab.com
