---
metadata:
  name: "K8s Namespace Drift RCA"
  description: "Investigates cost drift in Kubernetes namespaces by analyzing OpenCost allocation data and correlating with deployment and incident history"
  tags: ["finops", "investigations", "kubernetes", "k8s", "opencost", "namespace-cost"]
model: gpt-4o-mini
max_steps: 12
app: "finops"
app_type: "investigations"
output:
  schema:
    type: object
    required: ["investigation_id", "investigation_type", "finding", "root_cause", "impact", "timeline", "affected_resources", "evidence", "remediation", "confidence"]
    properties:
      investigation_id:
        type: string
        description: Unique identifier for this K8s cost drift investigation
      investigation_type:
        type: string
        enum: ["namespace_cost_drift", "workload_cost_spike", "resource_overprovisioning"]
        description: Type of K8s cost investigation
      finding:
        type: string
        description: Summary of the namespace cost drift finding
      root_cause:
        type: object
        properties:
          primary_cause:
            type: string
            description: Main cause of namespace cost drift
          contributing_factors:
            type: array
            items:
              type: string
          technical_details:
            type: string
          cause_category:
            type: string
            enum: ["deployment_change", "resource_scaling", "pod_proliferation", "resource_leak", "misconfigured_limits", "incident_response"]
          deployment_correlation:
            type: object
            properties:
              related_deployment:
                type: string
              deployment_time:
                type: string
              changes_made:
                type: array
                items:
                  type: string
        required: ["primary_cause", "technical_details", "cause_category"]
      impact:
        type: object
        properties:
          cost_increase:
            type: number
          percentage_increase:
            type: number
          baseline_cost:
            type: number
          current_cost:
            type: number
          resource_waste:
            type: object
            properties:
              overprovisioned_cpu:
                type: number
                description: Unused CPU millicores
              overprovisioned_memory:
                type: number
                description: Unused memory bytes
              waste_percentage:
                type: number
          severity:
            type: string
            enum: ["critical", "high", "medium", "low"]
        required: ["cost_increase", "percentage_increase", "severity"]
      timeline:
        type: object
        properties:
          drift_start:
            type: string
          drift_detected:
            type: string
          drift_duration:
            type: string
          still_ongoing:
            type: boolean
          baseline_period:
            type: string
        required: ["drift_start", "drift_duration", "still_ongoing"]
      affected_resources:
        type: array
        items:
          type: object
          properties:
            namespace:
              type: string
            cluster:
              type: string
            workload_name:
              type: string
            workload_type:
              type: string
              enum: ["deployment", "statefulset", "daemonset", "job"]
            pod_count:
              type: integer
            resource_allocation:
              type: object
              properties:
                cpu_request:
                  type: number
                memory_request:
                  type: number
                cpu_usage:
                  type: number
                memory_usage:
                  type: number
                utilization_percentage:
                  type: number
            cost_contribution:
              type: number
          required: ["namespace", "workload_name", "cost_contribution"]
        description: K8s resources responsible for cost drift
      cost_breakdown:
        type: object
        properties:
          by_workload:
            type: array
            items:
              type: object
              properties:
                workload_name:
                  type: string
                cost_increase:
                  type: number
          by_resource_type:
            type: object
            properties:
              cpu_cost_increase:
                type: number
              memory_cost_increase:
                type: number
              storage_cost_increase:
                type: number
          by_pod_label:
            type: array
            items:
              type: object
              properties:
                label_key:
                  type: string
                label_value:
                  type: string
                cost_increase:
                  type: number
        description: Breakdown of K8s cost drift
      evidence:
        type: array
        items:
          type: object
          properties:
            evidence_type:
              type: string
              enum: ["allocation_data", "deployment_history", "incident_correlation", "pr_correlation", "resource_metrics"]
            description:
              type: string
            data_points:
              type: array
              items:
                type: object
            timestamp:
              type: string
        description: Evidence supporting root cause analysis
      incident_correlation:
        type: object
        properties:
          related_incidents:
            type: array
            items:
              type: object
              properties:
                incident_id:
                  type: string
                incident_title:
                  type: string
                timestamp:
                  type: string
                correlation_strength:
                  type: string
                  enum: ["strong", "moderate", "weak"]
          is_incident_related:
            type: boolean
        description: Correlation with incidents
      remediation:
        type: object
        properties:
          immediate_actions:
            type: array
            items:
              type: object
              properties:
                action:
                  type: string
                expected_savings:
                  type: number
                urgency:
                  type: string
                  enum: ["immediate", "high", "medium", "low"]
          resource_optimization:
            type: array
            items:
              type: object
              properties:
                workload:
                  type: string
                optimization:
                  type: string
                potential_savings:
                  type: number
          preventative_measures:
            type: array
            items:
              type: string
          estimated_time_to_resolve:
            type: string
        required: ["immediate_actions", "preventative_measures"]
      confidence:
        type: number
        minimum: 0
        maximum: 1
        description: Confidence in root cause analysis
tools:
  - "__get_allocation"
  - "__list_deployments"
  - "__list_incidents"
  - "__list_prs"
---

{{role "system"}}
You are a Kubernetes Namespace Cost Drift Investigator specializing in analyzing unexpected cost increases in K8s namespaces using OpenCost allocation data.

**Investigation Methodology:**

1. **Analyze Allocations**: Use get_allocation to understand namespace/workload cost breakdown
2. **Identify Drift**: Compare current costs to historical baseline to detect increases
3. **Deployment Correlation**: Use list_deployments to check for recent workload changes
4. **Incident Analysis**: Use list_incidents to correlate cost spikes with operational issues
5. **Code Analysis**: Use list_prs to identify code changes that might increase resource usage
6. **Root Cause**: Determine why namespace costs increased (scaling, inefficiency, incident response)

**What You Investigate:**
- Namespace cost increases (production, staging, specific teams)
- Workload/controller cost drift (deployments, statefulsets, jobs)
- Resource type breakdown (CPU, memory, network, storage costs)
- Pod scaling behavior (replica count changes, horizontal pod autoscaler)
- Label-based cost allocation (team, app, environment attribution)

**Cost Drivers to Analyze:**
- CPU cost increases (inefficient code, increased load, autoscaling)
- Memory cost increases (memory leaks, caching changes, workload scaling)
- Network cost increases (service mesh overhead, inter-pod communication)
- Storage cost increases (PVC growth, log volume mounts)

**Correlation Analysis:**
- Did cost spike after a specific deployment?
- Was there an incident that triggered autoscaling?
- Did a PR introduce resource-intensive code?
- Are there zombie pods or unused resources?

**Output Requirements:**
- Finding describing namespace/workload cost drift
- Root cause linking to deployment, incident, or code change
- Cost impact by resource type (CPU, memory, network, storage)
- Time range showing when drift started
- Affected namespaces, controllers, and pods
- Evidence from OpenCost allocations, deployments, incidents, and PRs
- Recommendations to restore cost efficiency

{{role "user"}}
{{userInput}}
