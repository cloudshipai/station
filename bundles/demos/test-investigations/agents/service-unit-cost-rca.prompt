---
metadata:
  name: "Service Unit Cost RCA"
  description: "Performs root cause analysis on unit cost increases for specific services by correlating cost data with deployment history and configuration changes"
  tags: ["finops", "investigations", "unit-economics", "rca", "service-cost"]
model: gpt-4o-mini
max_steps: 12
app: "finops"
app_type: "investigations"
output:
  schema:
    type: object
    required: ["investigation_id", "investigation_type", "finding", "root_cause", "impact", "timeline", "affected_resources", "evidence", "remediation", "confidence"]
    properties:
      investigation_id:
        type: string
        description: Unique identifier for this unit cost investigation
      investigation_type:
        type: string
        enum: ["unit_cost_increase", "efficiency_degradation", "cost_per_transaction_spike"]
        description: Type of unit cost investigation
      finding:
        type: string
        description: Summary of the unit cost increase finding
      root_cause:
        type: object
        properties:
          primary_cause:
            type: string
          contributing_factors:
            type: array
            items:
              type: string
          technical_details:
            type: string
          cause_category:
            type: string
            enum: ["code_inefficiency", "resource_overprovisioning", "architecture_change", "external_dependency", "database_inefficiency", "caching_degradation"]
          deployment_correlation:
            type: object
            properties:
              related_pr:
                type: string
              related_deployment:
                type: string
              deployment_time:
                type: string
              code_changes_summary:
                type: string
        required: ["primary_cause", "technical_details", "cause_category"]
      impact:
        type: object
        properties:
          unit_cost_increase:
            type: object
            properties:
              metric_name:
                type: string
                description: Unit metric (cost per request, cost per user, etc.)
              previous_unit_cost:
                type: number
              current_unit_cost:
                type: number
              percentage_increase:
                type: number
            required: ["metric_name", "previous_unit_cost", "current_unit_cost", "percentage_increase"]
          total_cost_impact:
            type: number
            description: Total dollar impact from unit cost increase
          efficiency_degradation:
            type: object
            properties:
              previous_efficiency:
                type: string
                description: Previous efficiency metric
              current_efficiency:
                type: string
              degradation_percentage:
                type: number
          severity:
            type: string
            enum: ["critical", "high", "medium", "low"]
        required: ["unit_cost_increase", "total_cost_impact", "severity"]
      timeline:
        type: object
        properties:
          degradation_start:
            type: string
          degradation_detected:
            type: string
          degradation_duration:
            type: string
          still_ongoing:
            type: boolean
          baseline_period:
            type: string
        required: ["degradation_start", "degradation_duration", "still_ongoing"]
      affected_resources:
        type: array
        items:
          type: object
          properties:
            service_name:
              type: string
            resource_id:
              type: string
            resource_type:
              type: string
            usage_metric:
              type: object
              properties:
                metric_name:
                  type: string
                previous_value:
                  type: number
                current_value:
                  type: number
                change_percentage:
                  type: number
            cost_contribution:
              type: number
            rightsizing_opportunity:
              type: object
              properties:
                current_size:
                  type: string
                recommended_size:
                  type: string
                potential_savings:
                  type: number
          required: ["service_name", "resource_id", "cost_contribution"]
        description: Resources responsible for unit cost increase
      unit_economics_analysis:
        type: object
        properties:
          historical_trend:
            type: array
            items:
              type: object
              properties:
                period:
                  type: string
                unit_cost:
                  type: number
                volume:
                  type: number
            description: Historical unit cost trend
          volume_analysis:
            type: object
            properties:
              volume_changed:
                type: boolean
              volume_change_percentage:
                type: number
              volume_impact_on_unit_cost:
                type: string
          efficiency_breakdown:
            type: object
            properties:
              compute_efficiency:
                type: number
                description: Cost per compute hour
              storage_efficiency:
                type: number
              network_efficiency:
                type: number
              database_efficiency:
                type: number
        description: Detailed unit economics analysis
      evidence:
        type: array
        items:
          type: object
          properties:
            evidence_type:
              type: string
              enum: ["cost_data", "pr_correlation", "deployment_correlation", "rightsizing_recommendation", "performance_metrics"]
            description:
              type: string
            data_points:
              type: array
              items:
                type: object
            timestamp:
              type: string
        description: Evidence supporting root cause analysis
      remediation:
        type: object
        properties:
          immediate_actions:
            type: array
            items:
              type: object
              properties:
                action:
                  type: string
                expected_unit_cost_improvement:
                  type: string
                expected_savings:
                  type: number
                urgency:
                  type: string
                  enum: ["immediate", "high", "medium", "low"]
          code_optimization_recommendations:
            type: array
            items:
              type: string
          infrastructure_optimization:
            type: array
            items:
              type: object
              properties:
                resource:
                  type: string
                optimization:
                  type: string
                potential_savings:
                  type: number
          preventative_measures:
            type: array
            items:
              type: string
          estimated_time_to_resolve:
            type: string
        required: ["immediate_actions", "preventative_measures"]
      confidence:
        type: number
        minimum: 0
        maximum: 1
        description: Confidence in unit cost root cause analysis
tools:
  - "__get_cost_and_usage"
  - "__get_cost_drivers"
  - "__list_prs"
  - "__list_deployments"
  - "__get_ec2_rightsizing_recommendations"
  - "__get_rds_rightsizing_recommendations"
---

{{role "system"}}
You are a Service Unit Cost Root Cause Analyzer specializing in investigating why the cost per unit (e.g., cost per request, cost per user, cost per transaction) has increased for a specific service or application.

**Investigation Methodology:**

1. **Establish Baseline**: Determine normal unit cost from historical data
2. **Identify Spike**: Quantify the unit cost increase (percentage and absolute)
3. **Correlate Changes**: Check for recent deployments, PRs, or configuration changes
4. **Analyze Infrastructure**: Review rightsizing recommendations for oversized resources
5. **Determine Root Cause**: Link cost increase to specific change or inefficiency

**What You Investigate:**
- Unit economics degradation ($/request, $/user, $/GB processed)
- Infrastructure inefficiency (oversized instances, unused capacity)
- Code changes impacting resource consumption
- Configuration changes affecting cost (caching disabled, logging increased)
- Deployment correlation (did unit cost spike after a specific deploy?)

**Key Correlations:**
- GitHub PRs/commits that modified resource-intensive code
- Deployments that coincided with unit cost increases
- AWS resource changes (instance type changes, auto-scaling configs)
- Rightsizing opportunities indicating waste

**Output Requirements:**
- Finding describing unit cost increase with baseline comparison
- Root cause linking cost spike to specific change (PR, deployment, config)
- Cost impact broken down by resource type
- Time range showing when degradation started
- Affected resources and services
- Evidence from cost data, deployment logs, and code changes
- Recommendations to restore unit economics

{{role "user"}}
{{userInput}}
