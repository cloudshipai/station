---
metadata:
  name: "Vulnerability Exploitability Assessor"
  description: "Assesses CVE exploitability using AWS Inspector findings, evaluates CVSS scores, and prioritizes patching based on real-world threat intelligence"
  tags: ["security", "investigations", "aws", "inspector", "vulnerability-management", "cve"]
  app: "security"
  app_type: "investigations"
model: gpt-4o-mini
max_steps: 8
tools:
  - "__list_inspector_findings"
  - "__get_inspector_finding_details"
  - "__get_cve_information"
output:
  format: json
  schema:
    type: object
    required:
      - investigation_id
      - investigation_type
      - finding
      - exploitability_assessment
      - affected_resources
      - evidence
      - remediation
      - confidence
      - metadata
    properties:
      investigation_id:
        type: string
        description: "Unique identifier for this vulnerability investigation"
      investigation_type:
        type: string
        enum: ["vulnerability_assessment", "cve_analysis", "patch_prioritization"]
        description: "Type of vulnerability investigation performed"
      finding:
        type: object
        required:
          - title
          - severity
          - cve_ids
          - description
        properties:
          title:
            type: string
            description: "Inspector finding title"
          severity:
            type: string
            enum: ["CRITICAL", "HIGH", "MEDIUM", "LOW", "INFORMATIONAL"]
            description: "Finding severity level"
          cve_ids:
            type: array
            description: "Common Vulnerabilities and Exposures identifiers"
            items:
              type: string
              pattern: "^CVE-\\d{4}-\\d{4,}$"
          description:
            type: string
            description: "Detailed vulnerability description"
          vulnerability_category:
            type: string
            enum: ["NETWORK_VULNERABILITY", "PACKAGE_VULNERABILITY", "CODE_VULNERABILITY", "CONFIGURATION_ISSUE"]
            description: "Category of vulnerability"
          cvss_score:
            type: object
            properties:
              version:
                type: string
                enum: ["CVSS_V2", "CVSS_V3", "CVSS_V3.1"]
              base_score:
                type: number
                minimum: 0
                maximum: 10
              vector_string:
                type: string
                description: "CVSS vector string (e.g., CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"
              attack_vector:
                type: string
                enum: ["NETWORK", "ADJACENT", "LOCAL", "PHYSICAL"]
              attack_complexity:
                type: string
                enum: ["LOW", "HIGH"]
              privileges_required:
                type: string
                enum: ["NONE", "LOW", "HIGH"]
              user_interaction:
                type: string
                enum: ["NONE", "REQUIRED"]
      exploitability_assessment:
        type: object
        required:
          - risk_level
          - exploit_availability
          - real_world_exploitation
          - prioritization_score
        properties:
          risk_level:
            type: string
            enum: ["CRITICAL", "HIGH", "MEDIUM", "LOW"]
            description: "Overall risk level considering exploitability"
          exploit_availability:
            type: object
            properties:
              public_exploits:
                type: boolean
                description: "Whether public exploits are available"
              exploit_maturity:
                type: string
                enum: ["WEAPONIZED", "PROOF_OF_CONCEPT", "FUNCTIONAL", "UNPROVEN", "NOT_DEFINED"]
              metasploit_module:
                type: boolean
                description: "Whether Metasploit module exists"
              exploit_urls:
                type: array
                items:
                  type: string
                  format: uri
          real_world_exploitation:
            type: object
            properties:
              active_exploitation:
                type: boolean
                description: "Whether CVE is being actively exploited in the wild"
              exploitation_timeline:
                type: string
                description: "When exploitation was first observed"
              threat_actor_groups:
                type: array
                description: "Known APT/threat groups exploiting this vulnerability"
                items:
                  type: string
              ransomware_association:
                type: boolean
                description: "Whether this CVE is associated with ransomware campaigns"
          prioritization_score:
            type: object
            required:
              - epss_score
              - ssvc_decision
              - patch_priority
            properties:
              epss_score:
                type: number
                minimum: 0
                maximum: 1
                description: "Exploit Prediction Scoring System probability (0-1)"
              ssvc_decision:
                type: string
                enum: ["IMMEDIATE", "OUT_OF_CYCLE", "SCHEDULED", "DEFER"]
                description: "Stakeholder-Specific Vulnerability Categorization decision"
              patch_priority:
                type: string
                enum: ["P0_EMERGENCY", "P1_CRITICAL", "P2_HIGH", "P3_MEDIUM", "P4_LOW"]
                description: "Recommended patching priority"
              time_to_patch:
                type: string
                description: "Recommended timeframe for remediation (e.g., 24 hours, 7 days, 30 days)"
          threat_intelligence:
            type: object
            properties:
              cisa_kev:
                type: boolean
                description: "Listed in CISA Known Exploited Vulnerabilities catalog"
              kev_deadline:
                type: string
                format: date
                description: "CISA KEV remediation deadline if applicable"
              nist_severity:
                type: string
                enum: ["CRITICAL", "HIGH", "MEDIUM", "LOW"]
              vendor_advisory:
                type: string
                format: uri
                description: "Vendor security advisory URL"
      affected_resources:
        type: array
        description: "AWS resources affected by this vulnerability"
        items:
          type: object
          required:
            - resource_type
            - resource_id
            - account_id
            - region
          properties:
            resource_type:
              type: string
              enum: ["EC2_INSTANCE", "ECR_IMAGE", "LAMBDA_FUNCTION", "ECS_TASK", "AMI"]
              description: "Type of affected AWS resource"
            resource_id:
              type: string
              description: "AWS resource identifier"
            resource_name:
              type: string
              description: "Human-readable resource name"
            account_id:
              type: string
              description: "AWS account ID"
            region:
              type: string
              description: "AWS region"
            vulnerability_details:
              type: object
              properties:
                package_name:
                  type: string
                  description: "Vulnerable package name"
                installed_version:
                  type: string
                  description: "Currently installed vulnerable version"
                fixed_version:
                  type: string
                  description: "Version that fixes the vulnerability"
                file_path:
                  type: string
                  description: "Path to vulnerable file or package"
                network_exposure:
                  type: string
                  enum: ["INTERNET_FACING", "VPC_INTERNAL", "PRIVATE_SUBNET"]
                  description: "Network exposure of the vulnerable resource"
            blast_radius:
              type: object
              properties:
                data_classification:
                  type: string
                  enum: ["PUBLIC", "INTERNAL", "CONFIDENTIAL", "RESTRICTED"]
                connected_resources:
                  type: array
                  items:
                    type: string
                  description: "Other resources that could be compromised via this vulnerability"
                privilege_level:
                  type: string
                  enum: ["ADMIN", "ELEVATED", "USER", "NONE"]
                  description: "Privilege level of the vulnerable resource"
      evidence:
        type: object
        required:
          - detection_time
          - vulnerability_age
          - evidence_items
        properties:
          detection_time:
            type: string
            format: date-time
            description: "When Inspector detected this vulnerability"
          vulnerability_age:
            type: object
            properties:
              cve_published_date:
                type: string
                format: date
              cve_modified_date:
                type: string
                format: date
              days_since_publication:
                type: integer
                description: "Number of days since CVE was published"
              patch_available_date:
                type: string
                format: date
                description: "When patch became available"
              days_since_patch:
                type: integer
                description: "Number of days patch has been available"
          evidence_items:
            type: array
            description: "Specific evidence supporting this finding"
            items:
              type: object
              properties:
                evidence_type:
                  type: string
                  enum: ["PACKAGE_SCAN", "NETWORK_SCAN", "CODE_ANALYSIS", "CONFIGURATION_AUDIT", "THREAT_INTELLIGENCE"]
                description:
                  type: string
                timestamp:
                  type: string
                  format: date-time
                source:
                  type: string
                  description: "Source of this evidence (e.g., Inspector, ECR Scan, NIST NVD)"
          related_vulnerabilities:
            type: array
            description: "Related CVEs that may indicate broader vulnerability"
            items:
              type: object
              properties:
                cve_id:
                  type: string
                relationship:
                  type: string
                  description: "How this CVE relates (e.g., same package, exploit chain)"
                combined_risk:
                  type: string
                  description: "Risk when vulnerabilities are combined"
      remediation:
        type: object
        required:
          - immediate_actions
          - patching_strategy
          - mitigation_controls
          - long_term_improvements
        properties:
          immediate_actions:
            type: array
            description: "Critical actions to take immediately"
            items:
              type: object
              required:
                - action
                - priority
                - rationale
              properties:
                action:
                  type: string
                  description: "Specific remediation action"
                priority:
                  type: string
                  enum: ["CRITICAL", "HIGH", "MEDIUM"]
                aws_cli_command:
                  type: string
                  description: "AWS CLI command to execute this action"
                rationale:
                  type: string
                  description: "Why this action is necessary"
                estimated_time:
                  type: string
                  description: "Time required to complete"
                rollback_plan:
                  type: string
                  description: "How to rollback if remediation causes issues"
          patching_strategy:
            type: object
            properties:
              patch_type:
                type: string
                enum: ["SYSTEM_UPDATE", "PACKAGE_UPDATE", "AMI_REPLACEMENT", "CONTAINER_REBUILD", "CODE_FIX"]
              automated_patching:
                type: boolean
                description: "Whether automated patching is available"
              patch_commands:
                type: array
                items:
                  type: string
                description: "Commands to apply the patch"
              testing_requirements:
                type: string
                description: "Testing needed before production deployment"
              deployment_window:
                type: string
                description: "Recommended maintenance window for patching"
          mitigation_controls:
            type: array
            description: "Compensating controls if patching is not immediately possible"
            items:
              type: object
              properties:
                control:
                  type: string
                effectiveness:
                  type: string
                  enum: ["HIGH", "MEDIUM", "LOW"]
                implementation_steps:
                  type: array
                  items:
                    type: string
          long_term_improvements:
            type: array
            description: "Preventive measures to avoid recurrence"
            items:
              type: object
              properties:
                improvement:
                  type: string
                category:
                  type: string
                  enum: ["VULNERABILITY_SCANNING", "PATCH_MANAGEMENT", "CONTAINER_SECURITY", "SUPPLY_CHAIN", "SECURITY_BASELINE"]
                implementation_complexity:
                  type: string
                  enum: ["LOW", "MEDIUM", "HIGH"]
          estimated_cost:
            type: object
            description: "Cost implications of remediation"
            properties:
              labor_hours:
                type: number
              downtime_cost:
                type: number
              testing_cost:
                type: number
              total_estimated_cost:
                type: number
              currency:
                type: string
                default: "USD"
      confidence:
        type: object
        required:
          - level
          - reasoning
        properties:
          level:
            type: string
            enum: ["HIGH", "MEDIUM", "LOW"]
            description: "Confidence in this exploitability assessment"
          reasoning:
            type: string
            description: "Factors supporting the confidence level"
          data_completeness:
            type: number
            minimum: 0
            maximum: 100
            description: "Percentage of expected data available for analysis"
          threat_intelligence_sources:
            type: array
            description: "Threat intelligence sources consulted"
            items:
              type: string
              enum: ["NIST_NVD", "CISA_KEV", "EPSS", "MITRE", "VENDOR_ADVISORY", "EXPLOIT_DB", "METASPLOIT"]
      metadata:
        type: object
        required:
          - investigation_duration
          - data_sources
          - compliance_impact
        properties:
          investigation_duration:
            type: string
            description: "Time taken to complete this investigation"
          data_sources:
            type: array
            description: "AWS services and external sources queried during investigation"
            items:
              type: string
              enum: ["Inspector", "ECR", "Systems_Manager", "NIST_NVD", "CISA_KEV", "EPSS", "Exploit_DB"]
          analyst_notes:
            type: string
            description: "Additional context from the investigating analyst"
          compliance_impact:
            type: object
            properties:
              frameworks_affected:
                type: array
                items:
                  type: string
                  enum: ["PCI-DSS", "HIPAA", "SOC2", "ISO27001", "GDPR", "NIST", "CMMC"]
              compliance_deadline:
                type: string
                format: date
                description: "Compliance-driven remediation deadline"
          inspector_finding_arn:
            type: string
            description: "Original AWS Inspector finding ARN"
          investigation_status:
            type: string
            enum: ["ACTIVE", "PATCH_AVAILABLE", "PATCHED", "MITIGATED", "ACCEPTED_RISK"]
            description: "Current status of this vulnerability investigation"
          sla_status:
            type: object
            properties:
              sla_deadline:
                type: string
                format: date-time
              time_remaining:
                type: string
              sla_met:
                type: boolean
---

{{role "system"}}
You are an expert AWS Security Engineer specializing in vulnerability management and CVE exploitability assessment. Your role is to analyze AWS Inspector findings, evaluate the real-world exploitability of CVEs, and provide prioritized patching recommendations based on threat intelligence.

**Your Analysis Process:**

1. **Finding Retrieval**: Query AWS Inspector for vulnerability findings and retrieve detailed CVE information
2. **CVSS Analysis**: Evaluate CVSS scores, attack vectors, complexity, and impact metrics
3. **Exploitability Assessment**: Determine if public exploits exist, whether the CVE is actively exploited, and check CISA KEV catalog
4. **Prioritization Scoring**: Calculate EPSS scores, apply SSVC decision framework, and assign patch priority
5. **Resource Impact**: Identify affected EC2 instances, container images, Lambda functions, and assess blast radius
6. **Remediation Planning**: Provide patching strategies, compensating controls, and long-term security improvements
7. **Compliance Evaluation**: Map vulnerabilities to compliance frameworks and determine remediation deadlines

**Key Capabilities:**

- **EPSS Integration**: Exploit Prediction Scoring System for probability-based prioritization
- **CISA KEV Checking**: Verify if CVE is listed in Known Exploited Vulnerabilities catalog
- **SSVC Framework**: Apply Stakeholder-Specific Vulnerability Categorization for decision-making
- **Exploit Intelligence**: Cross-reference with Metasploit, Exploit-DB, and threat intelligence feeds
- **Package Analysis**: Identify vulnerable packages, installed versions, and fixed versions
- **Network Exposure**: Assess whether vulnerable resources are internet-facing or internal
- **Blast Radius Calculation**: Determine potential impact across connected resources and data classifications

**Output Format:**

Always provide structured JSON output with:
- Comprehensive exploitability assessment including EPSS score and SSVC decision
- CVSS score breakdown with attack vector, complexity, and impact metrics
- Real-world exploitation status with threat actor attribution
- Prioritized patching strategy with specific commands and rollback plans
- Compensating controls if immediate patching is not feasible
- Compliance impact with framework-specific deadlines
- Confidence assessment based on threat intelligence sources

**Example Use Cases:**

- "Assess the exploitability of all CRITICAL Inspector findings from the last 7 days"
- "Analyze CVE-2024-1234 and determine if we should apply emergency patching"
- "Find all vulnerabilities with public exploits available and prioritize by EPSS score"
- "Evaluate the blast radius of CVE-2023-5678 across our EC2 and ECS infrastructure"
- "Check which of our vulnerabilities are listed in CISA KEV and generate patching timeline"

{{role "user"}}
{{userInput}}
