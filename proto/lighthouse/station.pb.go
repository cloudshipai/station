// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.12.4
// source: proto/lighthouse/station.proto

package lighthouse

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Registration request with key and station info
type RegisterStationRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RegistrationKey string                 `protobuf:"bytes,1,opt,name=registration_key,json=registrationKey,proto3" json:"registration_key,omitempty"`
	Hostname        string                 `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	IpAddress       string                 `protobuf:"bytes,3,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Port            int32                  `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	Version         string                 `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	OsInfo          string                 `protobuf:"bytes,6,opt,name=os_info,json=osInfo,proto3" json:"os_info,omitempty"`
	HardwareInfo    *HardwareInfo          `protobuf:"bytes,7,opt,name=hardware_info,json=hardwareInfo,proto3" json:"hardware_info,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RegisterStationRequest) Reset() {
	*x = RegisterStationRequest{}
	mi := &file_proto_lighthouse_station_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterStationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterStationRequest) ProtoMessage() {}

func (x *RegisterStationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lighthouse_station_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterStationRequest.ProtoReflect.Descriptor instead.
func (*RegisterStationRequest) Descriptor() ([]byte, []int) {
	return file_proto_lighthouse_station_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterStationRequest) GetRegistrationKey() string {
	if x != nil {
		return x.RegistrationKey
	}
	return ""
}

func (x *RegisterStationRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *RegisterStationRequest) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *RegisterStationRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *RegisterStationRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *RegisterStationRequest) GetOsInfo() string {
	if x != nil {
		return x.OsInfo
	}
	return ""
}

func (x *RegisterStationRequest) GetHardwareInfo() *HardwareInfo {
	if x != nil {
		return x.HardwareInfo
	}
	return nil
}

type RegisterStationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	StationId     string                 `protobuf:"bytes,3,opt,name=station_id,json=stationId,proto3" json:"station_id,omitempty"`
	ExpiresAt     *timestamp.Timestamp   `protobuf:"bytes,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Config        *StationConfig         `protobuf:"bytes,5,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterStationResponse) Reset() {
	*x = RegisterStationResponse{}
	mi := &file_proto_lighthouse_station_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterStationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterStationResponse) ProtoMessage() {}

func (x *RegisterStationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lighthouse_station_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterStationResponse.ProtoReflect.Descriptor instead.
func (*RegisterStationResponse) Descriptor() ([]byte, []int) {
	return file_proto_lighthouse_station_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterStationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterStationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RegisterStationResponse) GetStationId() string {
	if x != nil {
		return x.StationId
	}
	return ""
}

func (x *RegisterStationResponse) GetExpiresAt() *timestamp.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *RegisterStationResponse) GetConfig() *StationConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

// Heartbeat to maintain alive status
type HeartbeatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StationId     string                 `protobuf:"bytes,1,opt,name=station_id,json=stationId,proto3" json:"station_id,omitempty"`
	Metrics       *SystemMetrics         `protobuf:"bytes,2,opt,name=metrics,proto3" json:"metrics,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"` // online, maintenance, error
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_proto_lighthouse_station_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lighthouse_station_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_proto_lighthouse_station_proto_rawDescGZIP(), []int{2}
}

func (x *HeartbeatRequest) GetStationId() string {
	if x != nil {
		return x.StationId
	}
	return ""
}

func (x *HeartbeatRequest) GetMetrics() *SystemMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *HeartbeatRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type HeartbeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Config        *StationConfig         `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`     // Updated config if available
	Commands      []string               `protobuf:"bytes,4,rep,name=commands,proto3" json:"commands,omitempty"` // Commands to execute
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_proto_lighthouse_station_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lighthouse_station_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_proto_lighthouse_station_proto_rawDescGZIP(), []int{3}
}

func (x *HeartbeatResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *HeartbeatResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HeartbeatResponse) GetConfig() *StationConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *HeartbeatResponse) GetCommands() []string {
	if x != nil {
		return x.Commands
	}
	return nil
}

// Get latest configuration
type GetConfigurationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StationId     string                 `protobuf:"bytes,1,opt,name=station_id,json=stationId,proto3" json:"station_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConfigurationRequest) Reset() {
	*x = GetConfigurationRequest{}
	mi := &file_proto_lighthouse_station_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConfigurationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigurationRequest) ProtoMessage() {}

func (x *GetConfigurationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lighthouse_station_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigurationRequest.ProtoReflect.Descriptor instead.
func (*GetConfigurationRequest) Descriptor() ([]byte, []int) {
	return file_proto_lighthouse_station_proto_rawDescGZIP(), []int{4}
}

func (x *GetConfigurationRequest) GetStationId() string {
	if x != nil {
		return x.StationId
	}
	return ""
}

type GetConfigurationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        *StationConfig         `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConfigurationResponse) Reset() {
	*x = GetConfigurationResponse{}
	mi := &file_proto_lighthouse_station_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConfigurationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigurationResponse) ProtoMessage() {}

func (x *GetConfigurationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lighthouse_station_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigurationResponse.ProtoReflect.Descriptor instead.
func (*GetConfigurationResponse) Descriptor() ([]byte, []int) {
	return file_proto_lighthouse_station_proto_rawDescGZIP(), []int{5}
}

func (x *GetConfigurationResponse) GetConfig() *StationConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

// Bidirectional streaming for real-time communication
type StreamMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to MessageType:
	//
	//	*StreamMessage_Heartbeat
	//	*StreamMessage_HeartbeatResponse
	//	*StreamMessage_Command
	//	*StreamMessage_StatusUpdate
	//	*StreamMessage_Log
	MessageType   isStreamMessage_MessageType `protobuf_oneof:"message_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamMessage) Reset() {
	*x = StreamMessage{}
	mi := &file_proto_lighthouse_station_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMessage) ProtoMessage() {}

func (x *StreamMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lighthouse_station_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMessage.ProtoReflect.Descriptor instead.
func (*StreamMessage) Descriptor() ([]byte, []int) {
	return file_proto_lighthouse_station_proto_rawDescGZIP(), []int{6}
}

func (x *StreamMessage) GetMessageType() isStreamMessage_MessageType {
	if x != nil {
		return x.MessageType
	}
	return nil
}

func (x *StreamMessage) GetHeartbeat() *HeartbeatRequest {
	if x != nil {
		if x, ok := x.MessageType.(*StreamMessage_Heartbeat); ok {
			return x.Heartbeat
		}
	}
	return nil
}

func (x *StreamMessage) GetHeartbeatResponse() *HeartbeatResponse {
	if x != nil {
		if x, ok := x.MessageType.(*StreamMessage_HeartbeatResponse); ok {
			return x.HeartbeatResponse
		}
	}
	return nil
}

func (x *StreamMessage) GetCommand() *CommandMessage {
	if x != nil {
		if x, ok := x.MessageType.(*StreamMessage_Command); ok {
			return x.Command
		}
	}
	return nil
}

func (x *StreamMessage) GetStatusUpdate() *StatusUpdate {
	if x != nil {
		if x, ok := x.MessageType.(*StreamMessage_StatusUpdate); ok {
			return x.StatusUpdate
		}
	}
	return nil
}

func (x *StreamMessage) GetLog() *LogMessage {
	if x != nil {
		if x, ok := x.MessageType.(*StreamMessage_Log); ok {
			return x.Log
		}
	}
	return nil
}

type isStreamMessage_MessageType interface {
	isStreamMessage_MessageType()
}

type StreamMessage_Heartbeat struct {
	Heartbeat *HeartbeatRequest `protobuf:"bytes,1,opt,name=heartbeat,proto3,oneof"`
}

type StreamMessage_HeartbeatResponse struct {
	HeartbeatResponse *HeartbeatResponse `protobuf:"bytes,2,opt,name=heartbeat_response,json=heartbeatResponse,proto3,oneof"`
}

type StreamMessage_Command struct {
	Command *CommandMessage `protobuf:"bytes,3,opt,name=command,proto3,oneof"`
}

type StreamMessage_StatusUpdate struct {
	StatusUpdate *StatusUpdate `protobuf:"bytes,4,opt,name=status_update,json=statusUpdate,proto3,oneof"`
}

type StreamMessage_Log struct {
	Log *LogMessage `protobuf:"bytes,5,opt,name=log,proto3,oneof"`
}

func (*StreamMessage_Heartbeat) isStreamMessage_MessageType() {}

func (*StreamMessage_HeartbeatResponse) isStreamMessage_MessageType() {}

func (*StreamMessage_Command) isStreamMessage_MessageType() {}

func (*StreamMessage_StatusUpdate) isStreamMessage_MessageType() {}

func (*StreamMessage_Log) isStreamMessage_MessageType() {}

// Hardware information collected from station
type HardwareInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cpu           string                 `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory        string                 `protobuf:"bytes,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Disk          string                 `protobuf:"bytes,3,opt,name=disk,proto3" json:"disk,omitempty"`
	Gpu           string                 `protobuf:"bytes,4,opt,name=gpu,proto3" json:"gpu,omitempty"`
	Additional    map[string]string      `protobuf:"bytes,5,rep,name=additional,proto3" json:"additional,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HardwareInfo) Reset() {
	*x = HardwareInfo{}
	mi := &file_proto_lighthouse_station_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HardwareInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HardwareInfo) ProtoMessage() {}

func (x *HardwareInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lighthouse_station_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HardwareInfo.ProtoReflect.Descriptor instead.
func (*HardwareInfo) Descriptor() ([]byte, []int) {
	return file_proto_lighthouse_station_proto_rawDescGZIP(), []int{7}
}

func (x *HardwareInfo) GetCpu() string {
	if x != nil {
		return x.Cpu
	}
	return ""
}

func (x *HardwareInfo) GetMemory() string {
	if x != nil {
		return x.Memory
	}
	return ""
}

func (x *HardwareInfo) GetDisk() string {
	if x != nil {
		return x.Disk
	}
	return ""
}

func (x *HardwareInfo) GetGpu() string {
	if x != nil {
		return x.Gpu
	}
	return ""
}

func (x *HardwareInfo) GetAdditional() map[string]string {
	if x != nil {
		return x.Additional
	}
	return nil
}

// System performance metrics
type SystemMetrics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CpuUsage      float64                `protobuf:"fixed64,1,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`          // Percentage 0-100
	MemoryUsage   float64                `protobuf:"fixed64,2,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"` // Percentage 0-100
	DiskUsage     float64                `protobuf:"fixed64,3,opt,name=disk_usage,json=diskUsage,proto3" json:"disk_usage,omitempty"`       // Percentage 0-100
	NetworkIn     int64                  `protobuf:"varint,4,opt,name=network_in,json=networkIn,proto3" json:"network_in,omitempty"`        // Bytes received
	NetworkOut    int64                  `protobuf:"varint,5,opt,name=network_out,json=networkOut,proto3" json:"network_out,omitempty"`     // Bytes sent
	Timestamp     *timestamp.Timestamp   `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemMetrics) Reset() {
	*x = SystemMetrics{}
	mi := &file_proto_lighthouse_station_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMetrics) ProtoMessage() {}

func (x *SystemMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lighthouse_station_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMetrics.ProtoReflect.Descriptor instead.
func (*SystemMetrics) Descriptor() ([]byte, []int) {
	return file_proto_lighthouse_station_proto_rawDescGZIP(), []int{8}
}

func (x *SystemMetrics) GetCpuUsage() float64 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *SystemMetrics) GetMemoryUsage() float64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

func (x *SystemMetrics) GetDiskUsage() float64 {
	if x != nil {
		return x.DiskUsage
	}
	return 0
}

func (x *SystemMetrics) GetNetworkIn() int64 {
	if x != nil {
		return x.NetworkIn
	}
	return 0
}

func (x *SystemMetrics) GetNetworkOut() int64 {
	if x != nil {
		return x.NetworkOut
	}
	return 0
}

func (x *SystemMetrics) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Station configuration
type StationConfig struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	AutoUpdate        bool                   `protobuf:"varint,1,opt,name=auto_update,json=autoUpdate,proto3" json:"auto_update,omitempty"`
	LoggingLevel      string                 `protobuf:"bytes,2,opt,name=logging_level,json=loggingLevel,proto3" json:"logging_level,omitempty"`
	MaxConcurrentJobs int32                  `protobuf:"varint,3,opt,name=max_concurrent_jobs,json=maxConcurrentJobs,proto3" json:"max_concurrent_jobs,omitempty"`
	StoragePath       string                 `protobuf:"bytes,4,opt,name=storage_path,json=storagePath,proto3" json:"storage_path,omitempty"`
	HeartbeatInterval int32                  `protobuf:"varint,5,opt,name=heartbeat_interval,json=heartbeatInterval,proto3" json:"heartbeat_interval,omitempty"` // Seconds
	Settings          map[string]string      `protobuf:"bytes,6,rep,name=settings,proto3" json:"settings,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *StationConfig) Reset() {
	*x = StationConfig{}
	mi := &file_proto_lighthouse_station_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationConfig) ProtoMessage() {}

func (x *StationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lighthouse_station_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationConfig.ProtoReflect.Descriptor instead.
func (*StationConfig) Descriptor() ([]byte, []int) {
	return file_proto_lighthouse_station_proto_rawDescGZIP(), []int{9}
}

func (x *StationConfig) GetAutoUpdate() bool {
	if x != nil {
		return x.AutoUpdate
	}
	return false
}

func (x *StationConfig) GetLoggingLevel() string {
	if x != nil {
		return x.LoggingLevel
	}
	return ""
}

func (x *StationConfig) GetMaxConcurrentJobs() int32 {
	if x != nil {
		return x.MaxConcurrentJobs
	}
	return 0
}

func (x *StationConfig) GetStoragePath() string {
	if x != nil {
		return x.StoragePath
	}
	return ""
}

func (x *StationConfig) GetHeartbeatInterval() int32 {
	if x != nil {
		return x.HeartbeatInterval
	}
	return 0
}

func (x *StationConfig) GetSettings() map[string]string {
	if x != nil {
		return x.Settings
	}
	return nil
}

// Command to be executed on station
type CommandMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // restart, update, configure, run_job
	Parameters    map[string]string      `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ExpiresAt     *timestamp.Timestamp   `protobuf:"bytes,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandMessage) Reset() {
	*x = CommandMessage{}
	mi := &file_proto_lighthouse_station_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandMessage) ProtoMessage() {}

func (x *CommandMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lighthouse_station_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandMessage.ProtoReflect.Descriptor instead.
func (*CommandMessage) Descriptor() ([]byte, []int) {
	return file_proto_lighthouse_station_proto_rawDescGZIP(), []int{10}
}

func (x *CommandMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CommandMessage) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CommandMessage) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *CommandMessage) GetExpiresAt() *timestamp.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

// Status update from station
type StatusUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StationId     string                 `protobuf:"bytes,1,opt,name=station_id,json=stationId,proto3" json:"station_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // online, offline, maintenance, error
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     *timestamp.Timestamp   `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusUpdate) Reset() {
	*x = StatusUpdate{}
	mi := &file_proto_lighthouse_station_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusUpdate) ProtoMessage() {}

func (x *StatusUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lighthouse_station_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusUpdate.ProtoReflect.Descriptor instead.
func (*StatusUpdate) Descriptor() ([]byte, []int) {
	return file_proto_lighthouse_station_proto_rawDescGZIP(), []int{11}
}

func (x *StatusUpdate) GetStationId() string {
	if x != nil {
		return x.StationId
	}
	return ""
}

func (x *StatusUpdate) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *StatusUpdate) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StatusUpdate) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Log message from station
type LogMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StationId     string                 `protobuf:"bytes,1,opt,name=station_id,json=stationId,proto3" json:"station_id,omitempty"`
	Level         string                 `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty"` // debug, info, warn, error
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Component     string                 `protobuf:"bytes,4,opt,name=component,proto3" json:"component,omitempty"`
	Timestamp     *timestamp.Timestamp   `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogMessage) Reset() {
	*x = LogMessage{}
	mi := &file_proto_lighthouse_station_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogMessage) ProtoMessage() {}

func (x *LogMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lighthouse_station_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogMessage.ProtoReflect.Descriptor instead.
func (*LogMessage) Descriptor() ([]byte, []int) {
	return file_proto_lighthouse_station_proto_rawDescGZIP(), []int{12}
}

func (x *LogMessage) GetStationId() string {
	if x != nil {
		return x.StationId
	}
	return ""
}

func (x *LogMessage) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *LogMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LogMessage) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *LogMessage) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_proto_lighthouse_station_proto protoreflect.FileDescriptor

const file_proto_lighthouse_station_proto_rawDesc = "" +
	"\n" +
	"\x1eproto/lighthouse/station.proto\x12\x15lighthouse.station.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\x8f\x02\n" +
	"\x16RegisterStationRequest\x12)\n" +
	"\x10registration_key\x18\x01 \x01(\tR\x0fregistrationKey\x12\x1a\n" +
	"\bhostname\x18\x02 \x01(\tR\bhostname\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x03 \x01(\tR\tipAddress\x12\x12\n" +
	"\x04port\x18\x04 \x01(\x05R\x04port\x12\x18\n" +
	"\aversion\x18\x05 \x01(\tR\aversion\x12\x17\n" +
	"\aos_info\x18\x06 \x01(\tR\x06osInfo\x12H\n" +
	"\rhardware_info\x18\a \x01(\v2#.lighthouse.station.v1.HardwareInfoR\fhardwareInfo\"\xe5\x01\n" +
	"\x17RegisterStationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"station_id\x18\x03 \x01(\tR\tstationId\x129\n" +
	"\n" +
	"expires_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x12<\n" +
	"\x06config\x18\x05 \x01(\v2$.lighthouse.station.v1.StationConfigR\x06config\"\x89\x01\n" +
	"\x10HeartbeatRequest\x12\x1d\n" +
	"\n" +
	"station_id\x18\x01 \x01(\tR\tstationId\x12>\n" +
	"\ametrics\x18\x02 \x01(\v2$.lighthouse.station.v1.SystemMetricsR\ametrics\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\"\xa1\x01\n" +
	"\x11HeartbeatResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12<\n" +
	"\x06config\x18\x03 \x01(\v2$.lighthouse.station.v1.StationConfigR\x06config\x12\x1a\n" +
	"\bcommands\x18\x04 \x03(\tR\bcommands\"8\n" +
	"\x17GetConfigurationRequest\x12\x1d\n" +
	"\n" +
	"station_id\x18\x01 \x01(\tR\tstationId\"X\n" +
	"\x18GetConfigurationResponse\x12<\n" +
	"\x06config\x18\x01 \x01(\v2$.lighthouse.station.v1.StationConfigR\x06config\"\x89\x03\n" +
	"\rStreamMessage\x12G\n" +
	"\theartbeat\x18\x01 \x01(\v2'.lighthouse.station.v1.HeartbeatRequestH\x00R\theartbeat\x12Y\n" +
	"\x12heartbeat_response\x18\x02 \x01(\v2(.lighthouse.station.v1.HeartbeatResponseH\x00R\x11heartbeatResponse\x12A\n" +
	"\acommand\x18\x03 \x01(\v2%.lighthouse.station.v1.CommandMessageH\x00R\acommand\x12J\n" +
	"\rstatus_update\x18\x04 \x01(\v2#.lighthouse.station.v1.StatusUpdateH\x00R\fstatusUpdate\x125\n" +
	"\x03log\x18\x05 \x01(\v2!.lighthouse.station.v1.LogMessageH\x00R\x03logB\x0e\n" +
	"\fmessage_type\"\xf2\x01\n" +
	"\fHardwareInfo\x12\x10\n" +
	"\x03cpu\x18\x01 \x01(\tR\x03cpu\x12\x16\n" +
	"\x06memory\x18\x02 \x01(\tR\x06memory\x12\x12\n" +
	"\x04disk\x18\x03 \x01(\tR\x04disk\x12\x10\n" +
	"\x03gpu\x18\x04 \x01(\tR\x03gpu\x12S\n" +
	"\n" +
	"additional\x18\x05 \x03(\v23.lighthouse.station.v1.HardwareInfo.AdditionalEntryR\n" +
	"additional\x1a=\n" +
	"\x0fAdditionalEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe8\x01\n" +
	"\rSystemMetrics\x12\x1b\n" +
	"\tcpu_usage\x18\x01 \x01(\x01R\bcpuUsage\x12!\n" +
	"\fmemory_usage\x18\x02 \x01(\x01R\vmemoryUsage\x12\x1d\n" +
	"\n" +
	"disk_usage\x18\x03 \x01(\x01R\tdiskUsage\x12\x1d\n" +
	"\n" +
	"network_in\x18\x04 \x01(\x03R\tnetworkIn\x12\x1f\n" +
	"\vnetwork_out\x18\x05 \x01(\x03R\n" +
	"networkOut\x128\n" +
	"\ttimestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\xe4\x02\n" +
	"\rStationConfig\x12\x1f\n" +
	"\vauto_update\x18\x01 \x01(\bR\n" +
	"autoUpdate\x12#\n" +
	"\rlogging_level\x18\x02 \x01(\tR\floggingLevel\x12.\n" +
	"\x13max_concurrent_jobs\x18\x03 \x01(\x05R\x11maxConcurrentJobs\x12!\n" +
	"\fstorage_path\x18\x04 \x01(\tR\vstoragePath\x12-\n" +
	"\x12heartbeat_interval\x18\x05 \x01(\x05R\x11heartbeatInterval\x12N\n" +
	"\bsettings\x18\x06 \x03(\v22.lighthouse.station.v1.StationConfig.SettingsEntryR\bsettings\x1a;\n" +
	"\rSettingsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x85\x02\n" +
	"\x0eCommandMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12U\n" +
	"\n" +
	"parameters\x18\x03 \x03(\v25.lighthouse.station.v1.CommandMessage.ParametersEntryR\n" +
	"parameters\x129\n" +
	"\n" +
	"expires_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x99\x01\n" +
	"\fStatusUpdate\x12\x1d\n" +
	"\n" +
	"station_id\x18\x01 \x01(\tR\tstationId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\xb3\x01\n" +
	"\n" +
	"LogMessage\x12\x1d\n" +
	"\n" +
	"station_id\x18\x01 \x01(\tR\tstationId\x12\x14\n" +
	"\x05level\x18\x02 \x01(\tR\x05level\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x1c\n" +
	"\tcomponent\x18\x04 \x01(\tR\tcomponent\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp2\xbb\x03\n" +
	"\x0eStationService\x12p\n" +
	"\x0fRegisterStation\x12-.lighthouse.station.v1.RegisterStationRequest\x1a..lighthouse.station.v1.RegisterStationResponse\x12^\n" +
	"\tHeartbeat\x12'.lighthouse.station.v1.HeartbeatRequest\x1a(.lighthouse.station.v1.HeartbeatResponse\x12s\n" +
	"\x10GetConfiguration\x12..lighthouse.station.v1.GetConfigurationRequest\x1a/.lighthouse.station.v1.GetConfigurationResponse\x12b\n" +
	"\x10StreamConnection\x12$.lighthouse.station.v1.StreamMessage\x1a$.lighthouse.station.v1.StreamMessage(\x010\x01B\x1aZ\x18station/proto/lighthouseb\x06proto3"

var (
	file_proto_lighthouse_station_proto_rawDescOnce sync.Once
	file_proto_lighthouse_station_proto_rawDescData []byte
)

func file_proto_lighthouse_station_proto_rawDescGZIP() []byte {
	file_proto_lighthouse_station_proto_rawDescOnce.Do(func() {
		file_proto_lighthouse_station_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_lighthouse_station_proto_rawDesc), len(file_proto_lighthouse_station_proto_rawDesc)))
	})
	return file_proto_lighthouse_station_proto_rawDescData
}

var file_proto_lighthouse_station_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_proto_lighthouse_station_proto_goTypes = []any{
	(*RegisterStationRequest)(nil),   // 0: lighthouse.station.v1.RegisterStationRequest
	(*RegisterStationResponse)(nil),  // 1: lighthouse.station.v1.RegisterStationResponse
	(*HeartbeatRequest)(nil),         // 2: lighthouse.station.v1.HeartbeatRequest
	(*HeartbeatResponse)(nil),        // 3: lighthouse.station.v1.HeartbeatResponse
	(*GetConfigurationRequest)(nil),  // 4: lighthouse.station.v1.GetConfigurationRequest
	(*GetConfigurationResponse)(nil), // 5: lighthouse.station.v1.GetConfigurationResponse
	(*StreamMessage)(nil),            // 6: lighthouse.station.v1.StreamMessage
	(*HardwareInfo)(nil),             // 7: lighthouse.station.v1.HardwareInfo
	(*SystemMetrics)(nil),            // 8: lighthouse.station.v1.SystemMetrics
	(*StationConfig)(nil),            // 9: lighthouse.station.v1.StationConfig
	(*CommandMessage)(nil),           // 10: lighthouse.station.v1.CommandMessage
	(*StatusUpdate)(nil),             // 11: lighthouse.station.v1.StatusUpdate
	(*LogMessage)(nil),               // 12: lighthouse.station.v1.LogMessage
	nil,                              // 13: lighthouse.station.v1.HardwareInfo.AdditionalEntry
	nil,                              // 14: lighthouse.station.v1.StationConfig.SettingsEntry
	nil,                              // 15: lighthouse.station.v1.CommandMessage.ParametersEntry
	(*timestamp.Timestamp)(nil),      // 16: google.protobuf.Timestamp
}
var file_proto_lighthouse_station_proto_depIdxs = []int32{
	7,  // 0: lighthouse.station.v1.RegisterStationRequest.hardware_info:type_name -> lighthouse.station.v1.HardwareInfo
	16, // 1: lighthouse.station.v1.RegisterStationResponse.expires_at:type_name -> google.protobuf.Timestamp
	9,  // 2: lighthouse.station.v1.RegisterStationResponse.config:type_name -> lighthouse.station.v1.StationConfig
	8,  // 3: lighthouse.station.v1.HeartbeatRequest.metrics:type_name -> lighthouse.station.v1.SystemMetrics
	9,  // 4: lighthouse.station.v1.HeartbeatResponse.config:type_name -> lighthouse.station.v1.StationConfig
	9,  // 5: lighthouse.station.v1.GetConfigurationResponse.config:type_name -> lighthouse.station.v1.StationConfig
	2,  // 6: lighthouse.station.v1.StreamMessage.heartbeat:type_name -> lighthouse.station.v1.HeartbeatRequest
	3,  // 7: lighthouse.station.v1.StreamMessage.heartbeat_response:type_name -> lighthouse.station.v1.HeartbeatResponse
	10, // 8: lighthouse.station.v1.StreamMessage.command:type_name -> lighthouse.station.v1.CommandMessage
	11, // 9: lighthouse.station.v1.StreamMessage.status_update:type_name -> lighthouse.station.v1.StatusUpdate
	12, // 10: lighthouse.station.v1.StreamMessage.log:type_name -> lighthouse.station.v1.LogMessage
	13, // 11: lighthouse.station.v1.HardwareInfo.additional:type_name -> lighthouse.station.v1.HardwareInfo.AdditionalEntry
	16, // 12: lighthouse.station.v1.SystemMetrics.timestamp:type_name -> google.protobuf.Timestamp
	14, // 13: lighthouse.station.v1.StationConfig.settings:type_name -> lighthouse.station.v1.StationConfig.SettingsEntry
	15, // 14: lighthouse.station.v1.CommandMessage.parameters:type_name -> lighthouse.station.v1.CommandMessage.ParametersEntry
	16, // 15: lighthouse.station.v1.CommandMessage.expires_at:type_name -> google.protobuf.Timestamp
	16, // 16: lighthouse.station.v1.StatusUpdate.timestamp:type_name -> google.protobuf.Timestamp
	16, // 17: lighthouse.station.v1.LogMessage.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 18: lighthouse.station.v1.StationService.RegisterStation:input_type -> lighthouse.station.v1.RegisterStationRequest
	2,  // 19: lighthouse.station.v1.StationService.Heartbeat:input_type -> lighthouse.station.v1.HeartbeatRequest
	4,  // 20: lighthouse.station.v1.StationService.GetConfiguration:input_type -> lighthouse.station.v1.GetConfigurationRequest
	6,  // 21: lighthouse.station.v1.StationService.StreamConnection:input_type -> lighthouse.station.v1.StreamMessage
	1,  // 22: lighthouse.station.v1.StationService.RegisterStation:output_type -> lighthouse.station.v1.RegisterStationResponse
	3,  // 23: lighthouse.station.v1.StationService.Heartbeat:output_type -> lighthouse.station.v1.HeartbeatResponse
	5,  // 24: lighthouse.station.v1.StationService.GetConfiguration:output_type -> lighthouse.station.v1.GetConfigurationResponse
	6,  // 25: lighthouse.station.v1.StationService.StreamConnection:output_type -> lighthouse.station.v1.StreamMessage
	22, // [22:26] is the sub-list for method output_type
	18, // [18:22] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_proto_lighthouse_station_proto_init() }
func file_proto_lighthouse_station_proto_init() {
	if File_proto_lighthouse_station_proto != nil {
		return
	}
	file_proto_lighthouse_station_proto_msgTypes[6].OneofWrappers = []any{
		(*StreamMessage_Heartbeat)(nil),
		(*StreamMessage_HeartbeatResponse)(nil),
		(*StreamMessage_Command)(nil),
		(*StreamMessage_StatusUpdate)(nil),
		(*StreamMessage_Log)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_lighthouse_station_proto_rawDesc), len(file_proto_lighthouse_station_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_lighthouse_station_proto_goTypes,
		DependencyIndexes: file_proto_lighthouse_station_proto_depIdxs,
		MessageInfos:      file_proto_lighthouse_station_proto_msgTypes,
	}.Build()
	File_proto_lighthouse_station_proto = out.File
	file_proto_lighthouse_station_proto_goTypes = nil
	file_proto_lighthouse_station_proto_depIdxs = nil
}
