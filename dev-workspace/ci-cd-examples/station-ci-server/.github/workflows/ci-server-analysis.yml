name: CI Analysis via Station Server
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  setup-workspace:
    runs-on: ubuntu-latest
    outputs:
      job-id: ${{ steps.generate-id.outputs.job-id }}
    
    steps:
      - name: Generate Job ID
        id: generate-id
        run: |
          JOB_ID="ci-${GITHUB_SHA:0:8}-$(date +%s)"
          echo "job-id=$JOB_ID" >> $GITHUB_OUTPUT
          echo "Generated Job ID: $JOB_ID"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Upload workspace to Station CI Server
        run: |
          # Create workspace on Station CI server
          curl -X POST "http://${{ vars.STATION_CI_SERVER }}/api/v1/workspaces" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.STATION_CI_TOKEN }}" \
            -d '{
              "id": "${{ steps.generate-id.outputs.job-id }}",
              "repository": "${{ github.repository }}",
              "branch": "${{ github.ref_name }}",
              "commit": "${{ github.sha }}"
            }'

          # Upload source code
          tar czf - . | curl -X PUT \
            "http://${{ vars.STATION_CI_SERVER }}/api/v1/workspaces/${{ steps.generate-id.outputs.job-id }}/upload" \
            -H "Authorization: Bearer ${{ secrets.STATION_CI_TOKEN }}" \
            -H "Content-Type: application/gzip" \
            --data-binary @-

  terraform-analysis:
    runs-on: ubuntu-latest
    needs: setup-workspace
    if: contains(github.event.head_commit.modified, '.tf') || github.event_name == 'pull_request'
    
    steps:
      - name: Run Terraform Analysis
        id: analysis
        run: |
          RESPONSE=$(curl -X POST \
            "http://${{ vars.STATION_CI_SERVER }}/api/v1/agents/ci-terraform-analyzer/execute" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.STATION_CI_TOKEN }}" \
            -d '{
              "input": "Analyze Terraform configuration for security, cost, and quality issues",
              "context": {
                "JOB_ID": "${{ needs.setup-workspace.outputs.job-id }}",
                "REPOSITORY": "${{ github.repository }}",
                "BRANCH": "${{ github.ref_name }}",
                "COMMIT": "${{ github.sha }}"
              }
            }' -w "%{http_code}")
          
          HTTP_CODE="${RESPONSE: -3}"
          RESPONSE_BODY="${RESPONSE%???}"
          
          if [ "$HTTP_CODE" != "200" ]; then
            echo "Failed to execute agent: $RESPONSE_BODY"
            exit 1
          fi
          
          EXECUTION_ID=$(echo "$RESPONSE_BODY" | jq -r '.execution_id')
          echo "execution-id=$EXECUTION_ID" >> $GITHUB_OUTPUT

      - name: Wait for Analysis Completion
        run: |
          EXECUTION_ID="${{ steps.analysis.outputs.execution-id }}"
          
          while true; do
            STATUS=$(curl -s \
              "http://${{ vars.STATION_CI_SERVER }}/api/v1/executions/$EXECUTION_ID" \
              -H "Authorization: Bearer ${{ secrets.STATION_CI_TOKEN }}" \
              | jq -r '.status')
            
            if [ "$STATUS" = "completed" ]; then
              echo "Analysis completed successfully"
              break
            elif [ "$STATUS" = "failed" ]; then
              echo "Analysis failed"
              exit 1
            fi
            
            echo "Analysis in progress... (status: $STATUS)"
            sleep 10
          done

      - name: Download Analysis Report
        run: |
          curl -s \
            "http://${{ vars.STATION_CI_SERVER }}/api/v1/workspaces/${{ needs.setup-workspace.outputs.job-id }}/reports/terraform-analysis.json" \
            -H "Authorization: Bearer ${{ secrets.STATION_CI_TOKEN }}" \
            -o terraform-analysis.json

      - name: Process Analysis Results
        run: |
          if [ -f terraform-analysis.json ]; then
            echo "## üîç Terraform Analysis Results" >> $GITHUB_STEP_SUMMARY
            
            CRITICAL=$(jq -r '.security.critical // 0' terraform-analysis.json)
            HIGH=$(jq -r '.security.high // 0' terraform-analysis.json)  
            MEDIUM=$(jq -r '.security.medium // 0' terraform-analysis.json)
            COST=$(jq -r '.cost.monthly_estimate // "Unknown"' terraform-analysis.json)
            
            echo "- **Critical Issues:** $CRITICAL" >> $GITHUB_STEP_SUMMARY
            echo "- **High Issues:** $HIGH" >> $GITHUB_STEP_SUMMARY
            echo "- **Medium Issues:** $MEDIUM" >> $GITHUB_STEP_SUMMARY
            echo "- **Estimated Monthly Cost:** \$${COST}" >> $GITHUB_STEP_SUMMARY
            
            if [ "$CRITICAL" -gt "0" ] || [ "$HIGH" -gt "5" ]; then
              echo "‚ùå Analysis failed due to critical security issues"
              exit 1
            fi
          fi

      - name: Upload Analysis Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: terraform-analysis-report
          path: terraform-analysis.json

  cleanup:
    runs-on: ubuntu-latest
    needs: [setup-workspace, terraform-analysis]
    if: always()
    
    steps:
      - name: Cleanup Workspace
        run: |
          curl -X DELETE \
            "http://${{ vars.STATION_CI_SERVER }}/api/v1/workspaces/${{ needs.setup-workspace.outputs.job-id }}" \
            -H "Authorization: Bearer ${{ secrets.STATION_CI_TOKEN }}"